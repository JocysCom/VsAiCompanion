<UserControl
	x:Class="JocysCom.VS.AiCompanion.Engine.Controls.Chat.ChatControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:JcConverters="clr-namespace:JocysCom.ClassLibrary.Controls.Converters"
	xmlns:controls="clr-namespace:JocysCom.VS.AiCompanion.Engine.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:JocysCom.VS.AiCompanion.Engine.Controls.Chat"
	xmlns:locales="clr-namespace:JocysCom.VS.AiCompanion.Engine.Resources"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="This"
	Loaded="This_Loaded"
	SizeChanged="This_SizeChanged"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../../JocysCom/Controls/Themes/Default.xaml" />
				<ResourceDictionary Source="../../JocysCom/Controls/Themes/Icons.xaml" />
				<ResourceDictionary Source="../../Resources/Icons/Icons_Default.xaml" />
				<ResourceDictionary Source="../../Resources/MainResources.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<!--  Style for icons  -->
			<Style x:Key="IconTextStyle" TargetType="TextBlock">
				<Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
				<Setter Property="FontSize" Value="16" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Margin" Value="0,0,5,0" />
			</Style>
			<JcConverters:BoolToVisibilityConverter x:Key="_BoolToVisibilityConverter" />
			<Style x:Key="RoundCornerRed" TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Viewbox>
								<Border
									x:Name="border"
									Width="40"
									Height="40"
									CornerRadius="20"
									RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<ScaleTransform x:Name="Transform" ScaleX="1" ScaleY="1" />
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#EF6B78" />
											<GradientStop Offset="1" Color="#EF6B78" />
										</LinearGradientBrush>
									</Border.Background>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Border>
							</Viewbox>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter TargetName="border" Property="Background">
											<Setter.Value>
												<!--  +6L  -->
												<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
													<GradientStop Offset="0" Color="#ED5564" />
													<GradientStop Offset="1" Color="#ED5564" />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--  Other triggers  -->
								<EventTrigger RoutedEvent="Button.PreviewMouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="0.95"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="0.95"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Button.PreviewMouseUp">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="1"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="1"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<!--  Other triggers  -->
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="RoundCornerBlue" TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Viewbox>
								<Border
									x:Name="border"
									Width="40"
									Height="40"
									CornerRadius="20"
									RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<ScaleTransform x:Name="Transform" ScaleX="1" ScaleY="1" />
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#00aeec" />
											<GradientStop Offset="1" Color="#00aeec" />
										</LinearGradientBrush>
									</Border.Background>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Border>
							</Viewbox>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter TargetName="border" Property="Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
													<GradientStop Offset="0" Color="#00B8FA" />
													<GradientStop Offset="1" Color="#00B8FA" />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--  Other triggers  -->
								<EventTrigger RoutedEvent="Button.PreviewMouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="0.95"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="0.95"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Button.PreviewMouseUp">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="1"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="1"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<!--  Other triggers  -->
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid x:Name="ControlGrid" Background="White">
		<Grid x:Name="MainGrid" Background="White">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!--  Messages  -->
			<Border x:Name="MessagesPanelBorder" BorderBrush="{StaticResource BorderDark}" BorderThickness="0,0,0,1">
				<local:ChatListControl x:Name="MessagesPanel" />
			</Border>

			<Border
				x:Name="AvatarPanelBorder"
				Grid.Column="1"
				BorderBrush="{StaticResource BorderDark}"
				BorderThickness="0,0,0,1"
				Visibility="{Binding ShowAvatar, Converter={StaticResource _BoolToVisibilityConverter}}">
				<!--<ContentControl x:Name="AvatarPanel" VerticalAlignment="Top" Content="{DynamicResource AvatarControl}" />-->
			</Border>

			<!--  Inputs Panel  -->
			<Border
				Grid.Row="1"
				Grid.ColumnSpan="2"
				VerticalAlignment="Stretch"
				Background="{StaticResource BackgroundLight}">
				<StackPanel VerticalAlignment="Bottom">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<!--  Send Message  -->
						<StackPanel Grid.Row="1" Margin="10">
							<TabControl
								x:Name="MainTabControl"
								Margin="3"
								HorizontalAlignment="Stretch"
								HorizontalContentAlignment="Stretch"
								x:FieldModifier="public"
								TabStripPlacement="Bottom">
								<TabItem x:Name="ChatInstructionsTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE713;" />
											<Label Content="{StaticResource main_Instructions}" />
										</StackPanel>
									</TabItem.Header>
									<!--  Instructions  -->
									<Grid x:Name="InstructionsGrid" Background="White">
										<TextBox
											x:Name="DataInstructionsTextBox"
											MinHeight="30"
											Margin="0"
											Padding="10,7,10,7"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											AcceptsReturn="True"
											Background="White"
											BorderThickness="0"
											FocusVisualStyle="{StaticResource FocusVisualStyle_None}"
											PreviewKeyUp="DataInstructionsTextBox_PreviewKeyUp"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.ScrollChanged="DataInstructionsTextBox_ScrollChanged"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text="{Binding TextInstructions, UpdateSourceTrigger=PropertyChanged}"
											TextChanged="DataInstructionsTextBox_TextChanged"
											TextWrapping="Wrap">
											<TextBox.Resources>
												<Style TargetType="Border">
													<Setter Property="CornerRadius" Value="10" />
												</Style>
											</TextBox.Resources>
										</TextBox>
										<TextBlock
											MinHeight="30"
											Padding="10,7,10,7"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											IsHitTestVisible="False"
											Opacity="0.5"
											Text="Type instructions">
											<TextBlock.Style>
												<Style TargetType="{x:Type TextBlock}">
													<Setter Property="Visibility" Value="Collapsed" />
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition Binding="{Binding ElementName=DataInstructionsTextBox, Path=Text}" Value="" />
																<Condition Binding="{Binding ElementName=DataInstructionsTextBox, Path=IsKeyboardFocused}" Value="False" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter Property="Visibility" Value="Visible" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
										<Button
											x:Name="ExpandInstructionsButton"
											Width="30"
											Height="30"
											Margin="0"
											HorizontalAlignment="Right"
											VerticalAlignment="Bottom"
											Background="Transparent"
											Click="ExpandInstructionsButton_Click"
											Opacity="0.5">
											<Viewbox>
												<ContentControl
													x:Name="ExpandInstructionsButtonContent"
													Margin="0"
													Padding="0"
													Content="{StaticResource Icon_Maximize}"
													Focusable="False" />
											</Viewbox>
										</Button>
									</Grid>
								</TabItem>

								<TabItem x:Name="ChatMessageTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE8BD;" />
											<Label Content="{StaticResource main_Message}" />
										</StackPanel>
									</TabItem.Header>
									<Grid x:Name="MessageInputGrid" Background="White">
										<TextBox
											x:Name="DataTextBox"
											MinHeight="30"
											Margin="0"
											Padding="10,7,10,7"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											x:FieldModifier="public"
											AcceptsReturn="True"
											Background="White"
											BorderThickness="0"
											FocusVisualStyle="{StaticResource FocusVisualStyle_None}"
											PreviewKeyDown="DataTextBox_PreviewKeyDown"
											PreviewKeyUp="DataTextBox_PreviewKeyUp"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.ScrollChanged="DataTextBox_ScrollChanged"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
											TextChanged="DataTextBox_TextChanged"
											TextWrapping="Wrap">
											<TextBox.Resources>
												<Style TargetType="Border">
													<Setter Property="CornerRadius" Value="10" />
												</Style>
											</TextBox.Resources>
										</TextBox>
										<TextBlock
											MinHeight="30"
											Padding="10,7,10,7"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											IsHitTestVisible="False"
											Opacity="0.5"
											Text="Type a message">
											<TextBlock.Style>
												<Style TargetType="{x:Type TextBlock}">
													<Setter Property="Visibility" Value="Collapsed" />
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition Binding="{Binding ElementName=DataTextBox, Path=Text}" Value="" />
																<Condition Binding="{Binding ElementName=DataTextBox, Path=IsKeyboardFocused}" Value="False" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter Property="Visibility" Value="Visible" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
										<Button
											x:Name="ExpandMessageButton"
											Width="30"
											Height="30"
											Margin="0"
											HorizontalAlignment="Right"
											VerticalAlignment="Bottom"
											Background="Transparent"
											Click="ExpandMessageButton_Click"
											Opacity="0.5">
											<Viewbox>
												<ContentControl
													x:Name="ExpandMessageButtonContent"
													Margin="0"
													Padding="0"
													Content="{StaticResource Icon_Maximize}"
													Focusable="False" />
											</Viewbox>
										</Button>
									</Grid>

								</TabItem>
								<!--  Role (R) Tab  -->
								<TabItem x:Name="RoleTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE77B;" />
											<Label Content="{StaticResource main_Role}" />
										</StackPanel>
									</TabItem.Header>
									<StackPanel Margin="10">
										<TextBlock Text="{StaticResource main_RISEN_Role_Help}" ToolTip="{StaticResource main_RISEN_Role_Example}" />
										<TextBox
											Name="RoleTextBox"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											AcceptsReturn="True"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text=""
											TextWrapping="Wrap" />
									</StackPanel>
								</TabItem>
								<!--  Instructions (I) Tab  -->
								<TabItem x:Name="InstructionsTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE70F;" />
											<Label Content="{StaticResource main_Instructions}" />
										</StackPanel>
									</TabItem.Header>
									<StackPanel Margin="10">
										<TextBlock Text="{StaticResource main_RISEN_Instructions_Help}" ToolTip="{StaticResource main_RISEN_Instructions_Example}" />
										<TextBox
											Name="InstructionsTextBox"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											AcceptsReturn="True"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text=""
											TextWrapping="Wrap" />
									</StackPanel>
								</TabItem>
								<!--  Steps (S) Tab  -->
								<TabItem x:Name="StepsTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE14C;" />
											<Label Content="{StaticResource main_Steps}" />
										</StackPanel>
									</TabItem.Header>
									<StackPanel Margin="10">
										<TextBlock Text="{StaticResource main_RISEN_Steps_Help}" ToolTip="{StaticResource main_RISEN_Steps_Example}" />
										<TextBox
											Name="StepsTextBox"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											AcceptsReturn="True"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text=""
											TextWrapping="Wrap" />
									</StackPanel>
								</TabItem>
								<!--  End Goal (E) Tab  -->
								<TabItem x:Name="EndGoalTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE908;" />
											<Label Content="{StaticResource main_EndGoal}" />
										</StackPanel>
									</TabItem.Header>
									<StackPanel Margin="10">
										<TextBlock Text="{StaticResource main_RISEN_EndGoal_Help}" ToolTip="{StaticResource main_RISEN_EndGoal_Example}" />
										<TextBox
											Name="EndGoalTextBox"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											AcceptsReturn="True"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text=""
											TextWrapping="Wrap" />
									</StackPanel>
								</TabItem>
								<!--  Narrowing (N) Tab  -->
								<TabItem x:Name="NarrowingTabItem" x:FieldModifier="public">
									<TabItem.Header>
										<StackPanel Orientation="Horizontal">
											<TextBlock Style="{StaticResource IconTextStyle}" Text="&#xE71C;" />
											<Label Content="{StaticResource main_Narrowing}" />
										</StackPanel>
									</TabItem.Header>
									<StackPanel Margin="10">
										<TextBlock Text="{StaticResource main_RISEN_Narrowing_Help}" ToolTip="{StaticResource main_RISEN_Narrowing_Example}" />
										<TextBox
											Name="NarrowingTextBox"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											VerticalContentAlignment="Top"
											AcceptsReturn="True"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.VerticalScrollBarVisibility="Auto"
											SpellCheck.IsEnabled="True"
											Text=""
											TextWrapping="Wrap" />
									</StackPanel>
								</TabItem>
							</TabControl>

						</StackPanel>

						<!--  Buttons Panel  -->
						<StackPanel
							x:Name="MessageButtons"
							Grid.Row="1"
							Grid.Column="1"
							VerticalAlignment="Bottom"
							Orientation="Horizontal">
							<Button
								x:Name="SendButton"
								Width="30"
								Height="30"
								Margin="0,0,0,10"
								Click="SendButton_Click"
								Style="{DynamicResource RoundCornerBlue}">
								<Viewbox>
									<ContentControl
										Margin="0"
										Padding="0"
										Content="{StaticResource Icon_MediaPlay}"
										Focusable="False" />
								</Viewbox>
							</Button>
							<Button
								x:Name="StopButton"
								Width="30"
								Height="30"
								Margin="10,0,10,10"
								Click="StopButton_Click"
								Style="{DynamicResource RoundCornerRed}">
								<Viewbox>
									<ContentControl
										Margin="0"
										Padding="0"
										Content="{StaticResource Icon_MediaStop}"
										Focusable="False" />
								</Viewbox>
							</Button>
						</StackPanel>
					</Grid>
				</StackPanel>
			</Border>
			<StackPanel Visibility="Collapsed">
				<controls:AttachmentsControl x:Name="AttachmentsPanel" Grid.Row="2" />
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
