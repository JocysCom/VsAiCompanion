<UserControl
	x:Class="JocysCom.VS.AiCompanion.Engine.Controls.SettingsListFileControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:JcControls="clr-namespace:JocysCom.ClassLibrary.Controls"
	xmlns:converters="clr-namespace:JocysCom.VS.AiCompanion.Engine.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
	x:Name="This"
	d:DesignHeight="270"
	d:DesignWidth="480"
	Loaded="This_Loaded"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../JocysCom/Controls/Themes/Default.xaml" />
				<ResourceDictionary Source="../JocysCom/Controls/Themes/Icons.xaml" />
				<ResourceDictionary Source="../Resources/Icons/Icons_Default.xaml" />
				<ResourceDictionary Source="../Resources/MainResources.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<!--  Collection View Source with Grouping  -->
			<CollectionViewSource x:Key="GroupedData" Source="{Binding FilteredList, ElementName=This}">
				<CollectionViewSource.SortDescriptions>
					<scm:SortDescription PropertyName="ListGroupTime" />
					<scm:SortDescription PropertyName="Name" />
				</CollectionViewSource.SortDescriptions>
				<CollectionViewSource.GroupDescriptions>
					<PropertyGroupDescription PropertyName="ListGroupTime" />
				</CollectionViewSource.GroupDescriptions>
			</CollectionViewSource>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid Name="TemplateListGrid">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<StackPanel Margin="3,3,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
			<Button
				Name="AddButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="AddButton_Click"
				ToolTip="{StaticResource main_Add_New}">
				<StackPanel>
					<ContentControl Content="{StaticResource Icon_Add}" Focusable="False" />
					<Label x:Name="AddButtonLabel" Content="{StaticResource main_Add_New}" Visibility="Collapsed" />
				</StackPanel>
			</Button>
			<Button
				Name="EditButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="EditButton_Click"
				ToolTip="{StaticResource main_Edit}">
				<StackPanel>
					<ContentControl Content="{StaticResource Icon_Edit}" Focusable="False" />
					<Label x:Name="EditButtonLabel" Content="{StaticResource main_Edit}" Visibility="Collapsed" />
				</StackPanel>
			</Button>
			<Button
				Name="DeleteButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="DeleteButton_Click"
				ToolTip="{StaticResource main_Delete}">
				<StackPanel>
					<ContentControl Content="{StaticResource Icon_Delete}" Focusable="False" />
					<Label x:Name="DeleteButtonLabel" Content="{StaticResource main_Delete}" Visibility="Collapsed" />
				</StackPanel>
			</Button>
		</StackPanel>
		<StackPanel Margin="3,3,0,0" HorizontalAlignment="Right" Orientation="Horizontal">
			<Button
				Name="CreateNewTaskButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="CreateNewTaskButton_Click"
				ToolTip="{StaticResource main_Create_an_Assistant_Task_from_Model}">
				<StackPanel>
					<ContentControl Content="{StaticResource Icon_task_add}" Focusable="False" />
				</StackPanel>
			</Button>
			<Button
				Name="GenerateTitleButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="GenerateTitleButton_Click"
				ToolTip="{StaticResource main_Title_for_Attached_Context}">
				<StackPanel>
					<ContentControl Content="{StaticResource Icon_document_title_refresh}" Focusable="False" />
				</StackPanel>
			</Button>
			<Button
				Name="CopyButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="CopyButton_Click"
				ToolTip="{StaticResource main_Copy}">
				<ContentControl Content="{StaticResource Icon_copy}" Focusable="False" />
			</Button>
			<Button
				Name="PasteButton"
				Margin="0,0,3,3"
				x:FieldModifier="public"
				Background="Transparent"
				Click="PasteButton_Click"
				ToolTip="{StaticResource main_Paste}">
				<ContentControl Content="{StaticResource Icon_clipboard_paste}" Focusable="False" />
			</Button>
		</StackPanel>
		<Border Grid.Row="1" BorderBrush="{StaticResource BorderDark}" BorderThickness="0,1,0,1">
			<Grid Background="White">
				<TextBox
					x:Name="SearchTextBox"
					Margin="0,0,0,0"
					Padding="24,0,4,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					VerticalContentAlignment="Center"
					AcceptsReturn="True"
					Background="White"
					BorderThickness="0"
					PreviewKeyDown="SearchTextBox_PreviewKeyDown"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					TextChanged="SearchTextBox_TextChanged"
					TextWrapping="Wrap" />
				<Button
					Name="FilterButton"
					Margin="0"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Stretch"
					Background="Transparent"
					Click="FilterButton_Click"
					Opacity="0.5">
					<ContentControl Content="{StaticResource Icon_find_gray}" Focusable="False" />
				</Button>
				<TextBlock
					Margin="0"
					Padding="26,0,5,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"
					IsHitTestVisible="False"
					Opacity="0.5"
					Text="{StaticResource main_Search_the_list}">
					<TextBlock.Style>
						<Style TargetType="TextBlock">
							<Setter Property="Padding" Value="26,0,5,0" />
							<Setter Property="VerticalAlignment" Value="Stretch" />
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding ElementName=SearchTextBox, Path=Text}" Value="" />
										<Condition Binding="{Binding ElementName=SearchTextBox, Path=IsKeyboardFocused}" Value="False" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter Property="Visibility" Value="Visible" />
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
			</Grid>
		</Border>
		<DataGrid
			x:Name="MainDataGrid"
			Grid.Row="2"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			x:FieldModifier="public"
			AutoGenerateColumns="False"
			CanUserResizeColumns="False"
			CanUserSortColumns="False"
			CellEditEnding="MainDataGrid_CellEditEnding"
			ColumnWidth="Auto"
			HeadersVisibility="None"
			IsReadOnly="False"
			ItemsSource="{Binding Source={StaticResource GroupedData}}"
			Loaded="MainDataGrid_Loaded"
			MouseDoubleClick="MainDataGrid_MouseDoubleClick"
			PreparingCellForEdit="MainDataGrid_PreparingCellForEdit"
			PreviewKeyDown="MainDataGrid_PreviewKeyDown"
			ScrollViewer.CanContentScroll="False"
			ScrollViewer.HorizontalScrollBarVisibility="Hidden"
			ScrollViewer.VerticalScrollBarVisibility="Auto"
			SelectionMode="Extended"
			Sorting="MainDataGrid_Sorting">
			<DataGrid.Resources>
				<converters:ItemFormattingConverter x:Key="_MainDataGridFormattingConverter" />
			</DataGrid.Resources>
			<!--  GroupStyle for collapsible panels  -->
			<DataGrid.GroupStyle>
				<GroupStyle>
					<GroupStyle.ContainerStyle>
						<Style TargetType="GroupItem">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="GroupItem">
										<Expander IsExpanded="True" Style="{DynamicResource Expander_Default}">
											<!--  ToggleButton  -->
											<Expander.Header>
												<Grid>
													<Grid.Resources>
														<Style TargetType="TextBlock">
															<Setter Property="VerticalAlignment" Value="Center" />
															<Setter Property="Opacity" Value="0.3" />
															<Setter Property="Foreground" Value="Black" />
															<Setter Property="Margin" Value="3,0,6,0" />
														</Style>
													</Grid.Resources>
													<TextBlock Text="{Binding Path=Name}" />
													<TextBlock HorizontalAlignment="Right" Text="{Binding ItemCount}" />
												</Grid>
											</Expander.Header>
											<!--  Items  -->
											<ItemsPresenter />
										</Expander>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</GroupStyle.ContainerStyle>
				</GroupStyle>
			</DataGrid.GroupStyle>
			<!--  Columns  -->
			<DataGrid.Columns>
				<!--  Icon  -->
				<DataGridTemplateColumn x:Name="IconColumn" IsReadOnly="True">
					<DataGridTemplateColumn.CellStyle>
						<Style BasedOn="{StaticResource DataGridCell_Default}" TargetType="DataGridCell">
							<Setter Property="Focusable" Value="false" />
							<Setter Property="Width" Value="22" />
						</Style>
					</DataGridTemplateColumn.CellStyle>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Image x:Name="IconImage" Source="{Binding Icon}" Style="{StaticResource ImageCell_Default}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!--  CheckBox  -->
				<DataGridCheckBoxColumn
					x:Name="IsEnabledColumn"
					Binding="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					CanUserSort="False"
					EditingElementStyle="{StaticResource CheckBoxCell_Default}"
					ElementStyle="{StaticResource CheckBoxCell_Default}"
					IsThreeState="False" />
				<!--  CheckBox  -->
				<DataGridCheckBoxColumn
					x:Name="IsCheckedColumn"
					Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					CanUserSort="False"
					EditingElementStyle="{StaticResource CheckBoxCell_Default}"
					ElementStyle="{StaticResource CheckBoxCell_Default}">
					<DataGridCheckBoxColumn.Header>
						<CheckBox
							x:Name="IsCheckedColumnCheckBox"
							Margin="0"
							Padding="0"
							IsEnabled="False" />
					</DataGridCheckBoxColumn.Header>
				</DataGridCheckBoxColumn>
				<!--  Template  -->
				<DataGridTemplateColumn x:Name="StatusCodeColumn" IsReadOnly="True">
					<DataGridTemplateColumn.Header>
						<ContentControl
							x:Name="StatusCodeColumnContentControl"
							VerticalAlignment="Center"
							Content="{StaticResource Icon_Information_Grey}"
							IsEnabled="False" />
					</DataGridTemplateColumn.Header>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ContentControl>
								<ContentControl.Content>
									<MultiBinding Converter="{StaticResource _MainDataGridFormattingConverter}">
										<Binding RelativeSource="{RelativeSource Self}" />
										<Binding RelativeSource="{RelativeSource TemplatedParent}" />
										<Binding Path="StatusCode" />
									</MultiBinding>
								</ContentControl.Content>
							</ContentControl>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<!--  Text  -->
				<DataGridTextColumn
					x:Name="StatusTextColumn"
					Binding="{Binding StatusText}"
					EditingElementStyle="{StaticResource TextBoxCell}"
					ElementStyle="{StaticResource TextBlockCellM3}"
					Header="{StaticResource main_Status}" />
				<!--  TextColumn problem with width  -->
				<DataGridTextColumn
					Width="Auto"
					x:Name="NameColumn"
					Binding="{Binding Name}"
					EditingElementStyle="{StaticResource TextBoxCell}"
					ElementStyle="{StaticResource TextBlockCellM3W500}"
					Header="{StaticResource main_Name}" />
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
</UserControl>
