<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!--
  @templateConfig:
  Template Properties:
    background: Background color for the template box. Default: #60AF1F
    templateText: Text content to display. Default: C#
-->
<svg width="100%" height="100%" viewBox="0 0 512 512" version="1.1"
     xmlns="http://www.w3.org/2000/svg" 
     xmlns:xlink="http://www.w3.org/1999/xlink"
     xml:space="preserve" 
     xmlns:serif="http://www.serif.com/"
     style="--background: #60AF1F; --templateText: C#;">
  
  <!-- Existing design elements remain unchanged -->
  <g>
    <g>
      <rect id="curve1" x="64" y="0" width="384" height="512" style="fill:url(#_Linear1);"/>
      <g transform="matrix(1,0,0,1,-8,0)">
        <rect x="112" y="464" width="224" height="16" style="fill:url(#_Linear2);"/>
      </g>
      <g transform="matrix(1,0,0,1,-8,-1)">
        <rect x="112" y="432" width="112" height="16" style="fill:url(#_Linear3);"/>
      </g>
      <g transform="matrix(1,0,0,1,-8,0)">
        <rect x="160" y="400" width="144" height="16" style="fill:url(#_Linear4);"/>
      </g>
      <g transform="matrix(1,0,0,1,-8,-16)">
        <rect x="224" y="112" width="192" height="16" style="fill:url(#_Linear5);"/>
      </g>
      <g transform="matrix(1,0,0,1,-8,-16)">
        <rect x="160" y="80" width="176" height="16" style="fill:url(#_Linear6);"/>
      </g>
      <g transform="matrix(1,0,0,1,-8,-16)">
        <rect x="112" y="48" width="112" height="16" style="fill:url(#_Linear7);"/>
      </g>
    </g>
  </g>
  
  <!--
    @doc TemplateBox:
    This group defines the container for the template background and text.
    The background rectangle uses the CSS custom property for the fill color (default: #60AF1F)
    and spans x=0, y=128, width=512, height=256.
    The text element is centered via percentage coordinates and alignment attributes, ensuring it fills
    the vertical space without relying on fixed positioning.
  -->
  <g id="TemplateBox">
    <!-- Background rectangle using correct hex color and custom property -->
    <rect id="templateBackground" x="0" y="128" width="512" height="256"
          style="fill: var(--background, #60AF1F);" />
    
    <!-- Template text centered in the background; x="50%" and y="50%" align relative to the overall viewBox -->
    <text id="templateText" x="50%" y="50%" dominant-baseline="central" text-anchor="middle"
          fill="white" font-family="Arial, sans-serif" font-weight="bold" font-size="256px">
      C#
    </text>
  </g>
  
  <!-- Definitions for gradients -->
  <defs>
    <linearGradient id="_Linear1" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(310.858,512.001,-512.001,310.858,64,0)">
      <stop offset="0" style="stop-color:#F3FAFE;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#C7E8FB;stop-opacity:1"/>
    </linearGradient>
    <linearGradient id="_Linear2" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(225.819,432.001,-432.001,225.819,112,48)">
      <stop offset="0" style="stop-color:#8795A5;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#738191;stop-opacity:1"/>
    </linearGradient>
    <!-- Other gradient definitions remain unchanged -->
    <linearGradient id="_Linear3" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(225.819,432.001,-432.001,225.819,112,48)">
      <stop offset="0" style="stop-color:#8795A5;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#738191;stop-opacity:1"/>
    </linearGradient>
    <linearGradient id="_Linear4" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(225.819,432.001,-432.001,225.819,112,48)">
      <stop offset="0" style="stop-color:#8795A5;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#738191;stop-opacity:1"/>
    </linearGradient>
    <linearGradient id="_Linear5" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(225.819,432.001,-432.001,225.819,112,48)">
      <stop offset="0" style="stop-color:#8795A5;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#738191;stop-opacity:1"/>
    </linearGradient>
    <linearGradient id="_Linear6" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(225.819,432.001,-432.001,225.819,112,48)">
      <stop offset="0" style="stop-color:#8795A5;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#738191;stop-opacity:1"/>
    </linearGradient>
    <linearGradient id="_Linear7" x1="0" y1="0" x2="1" y2="0"
                    gradientUnits="userSpaceOnUse"
                    gradientTransform="matrix(225.819,432.001,-432.001,225.819,112,48)">
      <stop offset="0" style="stop-color:#8795A5;stop-opacity:1"/>
      <stop offset="1" style="stop-color:#738191;stop-opacity:1"/>
    </linearGradient>
  </defs>
  
  <!-- Script to update text content with the CSS variable -->
  <script type="application/ecmascript">
  <![CDATA[
    // When the SVG is loaded, update the text content based on the CSS variable --templateText
    (function(){
      // Get the SVG's computed style
      var svgElement = document.documentElement;
      var computedStyle = getComputedStyle(svgElement);
      var textValue = computedStyle.getPropertyValue('--templateText').trim() || "C#";
      
      // Set the text element's content to the value from the CSS custom property
      var textElement = document.getElementById('templateText');
      if (textElement) {
        textElement.textContent = textValue;
      }
    })();
  ]]>
  </script>
</svg>