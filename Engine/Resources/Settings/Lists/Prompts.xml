<ListInfo>
  <IsEnabled>false</IsEnabled>
  <Name>Prompts</Name>
  <IconType>.svg</IconType>
  <IconData>H4sIAAAAAAAACn1T226bQBB9z1dsN6+wN+6WSSTbJK6UJpHquOpTRfAWViaAgILTr+8sJsZtokqw&#xD;
zMyePWdmdphfH15y1Mm6UWURYk4YRrJIyp0q0hA/bW5MH19fXcw/rR6Wm++PEWq6FD0+Le4+LxE2&#xD;
Kf1mLSldbVbo6/YWccIpje4xwlnbVjNK+74nvUXKOqW3dVxlKmkoAKkGwiEKZJyTXbvDIKGZzxLh&#xD;
GKldiO/iV1n/AAfyLJrwA2bBGNNMI2R2yFWx/wjIgyCgwy5AQ8yqA0av47dXuzYLsbC1k0mVZu2b&#xD;
1ynZL0p9ADEkbHh0i+LnXJrPcbJP6/JXAYkWskdnCMhl1lRxIkNc1bKRdSehSITm6VCWSspi8CFS&#xD;
xW2GIPZFcMPeCiISZpiMuK5eHdswORHTsrYBcNxmx+gEgrfjxF8L/hujnyrPQ3wZuN5itcT0XzHL&#xD;
sDvuER/EjmSaZSTRb8Yd4iajziB+QmitrX1SiNwoiKL3CjwgvsEz0yKeZ/m5aRPH8jxDiLXe+Q81&#xD;
tGAJveA6KBixXQOcgWwqS1j8RsCwltBj1eprJMx9n4NLHANGzMk4H+xgMr3JhD5M9hkEWjDZ1mC/&#xD;
JVCUhcSoaetyD1d86Viu70M6x4A5jhOgxwBMnUziKsTDtJzCL6qVda7gA+C/q/GOxcxpCv+Gnu+r&#xD;
iz+y7EqprQMAAA==</IconData>
  <Created>2024-07-09T14:38:55.40805+01:00</Created>
  <Modified>2024-07-09T14:38:55.40805+01:00</Modified>
  <Description>Used to store user prompts.</Description>
  <Items>
    <ListItem>
      <Key>Assumptions</Key>
      <Value>Be creative/make any assumptions you need.</Value>
      <Comment>Encourages creativity by allowing the AI to relax some practical constraints.</Comment>
    </ListItem>
    <ListItem>
      <Key>Authentic Language</Key>
      <Value>Don't try to be politically correct or soften the language, because that will distort the ability to express ideas more accurately</Value>
      <Comment>An instruction to avoid political correctness and language softening, aiming to increase expression, freedom, and truthfulness for more accurate articulation of ideas.</Comment>
    </ListItem>
    <ListItem>
      <Key>Chain-of-Draft</Key>
      <Value>Think step by step, but only keep a minimum draft for each thinking step, with 5 words at most. Return the answer at the end of the response after a separator ####.</Value>
    </ListItem>
    <ListItem>
      <Key>Chain-of-Thougnt</Key>
      <Value>Show your work/provide sources/go step-by-step. Return the answer at the end of the response after a separator ####.</Value>
      <Comment>Encourages detailed responses by requiring the AI to show its reasoning and sources.</Comment>
    </ListItem>
    <ListItem>
      <Key>Context Clarfication</Key>
      <Value>Add sufficient context to your responses so the user can understand references, motivations, or background elements that might otherwise be unclear. When you detect a statement that may be ambiguous, incomplete, or lacks vital detail, you should do the following:&#xD;
1. Identify the gap in information.&#xD;
2. If the information is available within the conversation or from your knowledge base, incorporate those details to clarify the context.&#xD;
3. If the necessary context is not available, ask the user targeted follow-up questions to gather those missing details.&#xD;
By doing so, ensure any resulting sentence or paragraph is self-contained, clear, and informative.</Value>
    </ListItem>
    <ListItem>
      <Key>Efficient Expression</Key>
      <Value>Minimize repetition. Keep the word-to-idea ratio low.</Value>
      <Comment>Avoid redundancy and maintain a high word-to-idea ratio.</Comment>
    </ListItem>
    <ListItem>
      <Key>Embedding</Key>
      <Value>Utilize embedding search to locate relevant data and enhance the response.</Value>
      <Comment>Improve the quality and relevance of the response.</Comment>
    </ListItem>
    <ListItem>
      <Key>Function Calls</Key>
      <Value>Always execute the required function calls before you respond.</Value>
    </ListItem>
    <ListItem>
      <Key>Info Known</Key>
      <Value>Do not respond with the supplied file content. The user already has this information.</Value>
      <Comment>Prevent repeating information to allow for a more thorough and new response.</Comment>
    </ListItem>
    <ListItem>
      <Key>Markdown Blocks</Key>
      <Value>Wrap any and all code - including regular code snippets, inline code segments, diff outputs, pseudocode, or any text that represents code - in Markdown code blocks. Always include a language identifier when possible (for example, ```typescript for TypeScript or ```diff for diffs) to ensure proper formatting and syntax highlighting.</Value>
    </ListItem>
    <ListItem>
      <Key>Utilize Lists</Key>
      <Value>Utilize lists effectively to organize and plan tasks. Treat each list as a flexible and expandable memory tool where you can add, manage, and retrieve information locally. Use these lists to outline your tasks initially as a TODO and progressively fill them with necessary details and updates to ensure a comprehensive and structured approach</Value>
    </ListItem>
  </Items>
</ListInfo>