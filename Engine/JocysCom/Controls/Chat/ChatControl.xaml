<UserControl
	x:Class="JocysCom.ClassLibrary.Controls.Chat.ChatControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:JcConverters="clr-namespace:JocysCom.ClassLibrary.Controls.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:JocysCom.ClassLibrary.Controls.Chat"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="This"
	d:DesignHeight="450"
	d:DesignWidth="800"
	Background="White"
	Loaded="UserControl_Loaded"
	SizeChanged="This_SizeChanged"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<JcConverters:BoolToVisibilityConverter x:Key="_BoolToVisibilityConverter" />
			<Style x:Key="RoundCornerRed" TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid" Background="Transparent">
								<Border
									x:Name="border"
									Padding="4"
									BorderThickness="0"
									CornerRadius="10"
									RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<ScaleTransform x:Name="Transform" ScaleX="1" ScaleY="1" />
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#FA0000" />
											<GradientStop Offset="1" Color="#DC0000" />
										</LinearGradientBrush>
									</Border.Background>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter TargetName="border" Property="Background">
											<Setter.Value>
												<!--  +6L  -->
												<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
													<GradientStop Offset="0" Color="#FF1A1A" />
													<GradientStop Offset="1" Color="#FF0A0A" />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--  Other triggers  -->
								<EventTrigger RoutedEvent="Button.PreviewMouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="0.95"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="0.95"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Button.PreviewMouseUp">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="1"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="1"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<!--  Other triggers  -->
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="RoundCornerBlue" TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid" Background="Transparent">
								<Border
									x:Name="border"
									Padding="8"
									BorderThickness="0"
									CornerRadius="12"
									RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<ScaleTransform x:Name="Transform" ScaleX="1" ScaleY="1" />
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#00aeec" />
											<GradientStop Offset="1" Color="#008adc" />
										</LinearGradientBrush>
									</Border.Background>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter TargetName="border" Property="Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
													<GradientStop Offset="0" Color="#00B8FA" />
													<GradientStop Offset="1" Color="#0093EB" />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--  Other triggers  -->
								<EventTrigger RoutedEvent="Button.PreviewMouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="0.95"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="0.95"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Button.PreviewMouseUp">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="1"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="1"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<!--  Other triggers  -->
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<!--  Messages  -->
		<Border
			Grid.Row="0"
			Grid.Column="0"
			Grid.ColumnSpan="2"
			BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
			BorderThickness="0,0,0,1">
			<local:ChatListControl x:Name="MessagesPanel" />
		</Border>
		<!--  Message Instructions  -->
		<CheckBox
			Grid.Row="2"
			Margin="10,10,0,0"
			Content="Show instructions that will be included at the start of every message."
			Foreground="Gray"
			IsChecked="{Binding ShowInstructions}" />


		<Button
			x:Name="StopButton"
			Grid.Row="1"
			Grid.RowSpan="2"
			Grid.Column="1"
			Width="85"
			Margin="0,10,10,0"
			VerticalAlignment="Bottom"
			Background="Transparent"
			Click="StopButton_Click"
			Content="Stop"
			Style="{DynamicResource RoundCornerRed}"
			Visibility="Collapsed" />

		<StackPanel
			x:Name="DataInstructionsPanel"
			Grid.Row="1"
			Grid.Column="0"
			IsVisibleChanged="DataInstructionsPanel_IsVisibleChanged"
			Visibility="{Binding ShowInstructions, Converter={StaticResource _BoolToVisibilityConverter}}">
			<Border
				Margin="10"
				Padding="12,8,12,8"
				VerticalAlignment="Bottom"
				Background="#fdfdfd"
				CornerRadius="12">
				<Border.Effect>
					<DropShadowEffect
						BlurRadius="10"
						Direction="0"
						Opacity="0.25"
						ShadowDepth="0"
						Color="Black" />
				</Border.Effect>
				<Grid>
					<TextBox
						x:Name="DataInstructionsTextBox"
						Margin="0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						VerticalContentAlignment="Top"
						AcceptsReturn="True"
						Background="#fdfdfd"
						BorderThickness="0"
						PreviewKeyDown="DataInstructionsTextBox_PreviewKeyDown"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						ScrollViewer.VerticalScrollBarVisibility="Auto"
						Text="{Binding TextInstructions, UpdateSourceTrigger=PropertyChanged}"
						TextWrapping="Wrap" />
					<TextBlock
						Margin="0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						IsHitTestVisible="False"
						Opacity="0.5"
						Text="Type instructions">
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Visibility" Value="Collapsed" />
								<Style.Triggers>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ElementName=DataInstructionsTextBox, Path=Text}" Value="" />
											<Condition Binding="{Binding ElementName=DataInstructionsTextBox, Path=IsKeyboardFocused}" Value="False" />
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</Grid>
			</Border>
		</StackPanel>
		<!--  Send Message  -->
		<StackPanel Grid.Row="3" Grid.Column="0">
			<Border
				Margin="10"
				Padding="12,8,12,8"
				VerticalAlignment="Bottom"
				Background="#fdfdfd"
				CornerRadius="12">
				<Border.Effect>
					<DropShadowEffect
						BlurRadius="10"
						Direction="0"
						Opacity="0.25"
						ShadowDepth="0"
						Color="Black" />
				</Border.Effect>
				<Grid>
					<TextBox
						x:Name="DataTextBox"
						Margin="0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						VerticalContentAlignment="Top"
						x:FieldModifier="public"
						AcceptsReturn="True"
						Background="#fdfdfd"
						BorderThickness="0"
						PreviewKeyDown="DataTextBox_PreviewKeyDown"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						ScrollViewer.VerticalScrollBarVisibility="Auto"
						Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
						TextChanged="DataTextBox_TextChanged"
						TextWrapping="Wrap" />
					<TextBlock
						Margin="0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						IsHitTestVisible="False"
						Opacity="0.5"
						Text="Type a message">
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Visibility" Value="Collapsed" />
								<Style.Triggers>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ElementName=DataTextBox, Path=Text}" Value="" />
											<Condition Binding="{Binding ElementName=DataTextBox, Path=IsKeyboardFocused}" Value="False" />
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter Property="Visibility" Value="Visible" />
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</Grid>
			</Border>
		</StackPanel>
		<Button
			x:Name="SendButton"
			Grid.Row="3"
			Grid.Column="1"
			Width="85"
			Margin="0,10,10,10"
			Padding="12"
			VerticalAlignment="Bottom"
			Background="Transparent"
			Click="SendButton_Click"
			Content="Send"
			Style="{DynamicResource RoundCornerBlue}" />
	</Grid>
</UserControl>
