<UserControl
	x:Class="JocysCom.ClassLibrary.Controls.Chat.ChatControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:JcConverters="clr-namespace:JocysCom.ClassLibrary.Controls.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:JocysCom.ClassLibrary.Controls.Chat"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="This"
	d:DesignHeight="450"
	d:DesignWidth="800"
	Background="White"
	Loaded="UserControl_Loaded"
	SizeChanged="This_SizeChanged"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Themes/Default.xaml" />
				<ResourceDictionary Source="../Themes/Icons.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<JcConverters:BoolToVisibilityConverter x:Key="_BoolToVisibilityConverter" />
			<Style x:Key="RoundCornerRed" TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Viewbox>
								<Border
									x:Name="border"
									Width="40"
									Height="40"
									CornerRadius="20"
									RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<ScaleTransform x:Name="Transform" ScaleX="1" ScaleY="1" />
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#EF6B78" />
											<GradientStop Offset="1" Color="#EF6B78" />
										</LinearGradientBrush>
									</Border.Background>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Border>
							</Viewbox>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter TargetName="border" Property="Background">
											<Setter.Value>
												<!--  +6L  -->
												<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
													<GradientStop Offset="0" Color="#ED5564" />
													<GradientStop Offset="1" Color="#ED5564" />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--  Other triggers  -->
								<EventTrigger RoutedEvent="Button.PreviewMouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="0.95"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="0.95"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Button.PreviewMouseUp">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="1"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="1"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<!--  Other triggers  -->
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="RoundCornerBlue" TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Viewbox>
								<Border
									x:Name="border"
									Width="40"
									Height="40"
									CornerRadius="20"
									RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<ScaleTransform x:Name="Transform" ScaleX="1" ScaleY="1" />
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#00aeec" />
											<GradientStop Offset="1" Color="#00aeec" />
										</LinearGradientBrush>
									</Border.Background>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Border>
							</Viewbox>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter TargetName="border" Property="Background">
											<Setter.Value>
												<LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
													<GradientStop Offset="0" Color="#00B8FA" />
													<GradientStop Offset="1" Color="#00B8FA" />
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>

								<!--  Other triggers  -->
								<EventTrigger RoutedEvent="Button.PreviewMouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="0.95"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="0.95"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="Button.PreviewMouseUp">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleX"
												To="1"
												Duration="0:0:0.1" />
											<DoubleAnimation
												Storyboard.TargetName="Transform"
												Storyboard.TargetProperty="ScaleY"
												To="1"
												Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<!--  Other triggers  -->
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<!--  Messages  -->
		<Border
			Grid.Row="0"
			Grid.Column="0"
			Grid.ColumnSpan="2"
			BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
			BorderThickness="0,0,0,1">
			<local:ChatListControl x:Name="MessagesPanel" />
		</Border>
		<!--  Inputs Panel  -->
		<Border
			Grid.Row="1"
			Grid.Column="0"
			VerticalAlignment="Stretch"
			Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
			<StackPanel VerticalAlignment="Bottom">
				<StackPanel
					x:Name="DataInstructionsPanel"
					Grid.Row="1"
					Grid.Column="0"
					IsVisibleChanged="DataInstructionsPanel_IsVisibleChanged"
					Visibility="{Binding ShowInstructions, Converter={StaticResource _BoolToVisibilityConverter}}">
					<Border
						Margin="10,10,10,0"
						Padding="12,7,12,8"
						Background="White"
						CornerRadius="10">
						<!--<Border.Effect>
							<DropShadowEffect
								BlurRadius="0"
								Direction="0"
								Opacity="0.25"
								ShadowDepth="0"
								Color="Black" />
						</Border.Effect>-->
						<Grid>
							<TextBox
								x:Name="DataInstructionsTextBox"
								Margin="0"
								Padding="0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								VerticalContentAlignment="Top"
								AcceptsReturn="True"
								Background="Transparent"
								BorderThickness="0"
								PreviewKeyUp="DataInstructionsTextBox_PreviewKeyUp"
								ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								ScrollViewer.VerticalScrollBarVisibility="Auto"
								Text="{Binding TextInstructions, UpdateSourceTrigger=PropertyChanged}"
								TextChanged="DataInstructionsTextBox_TextChanged"
								TextWrapping="Wrap" />
							<TextBlock
								Margin="0"
								Padding="0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								IsHitTestVisible="False"
								Opacity="0.5"
								Text="Type instructions">
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Visibility" Value="Collapsed" />
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding ElementName=DataInstructionsTextBox, Path=Text}" Value="" />
													<Condition Binding="{Binding ElementName=DataInstructionsTextBox, Path=IsKeyboardFocused}" Value="False" />
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Visibility" Value="Visible" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Grid>
					</Border>
				</StackPanel>
				<!--  Send Message  -->
				<Border
					Margin="10"
					Padding="12,7,12,8"
					Background="White"
					CornerRadius="10">
					<!--<Border.Effect>
						<DropShadowEffect
							BlurRadius="0"
							Direction="0"
							Opacity="0.25"
							ShadowDepth="0"
							Color="Black" />
					</Border.Effect>-->
					<Grid>
						<TextBox
							x:Name="DataTextBox"
							Margin="0"
							Padding="0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							VerticalContentAlignment="Top"
							x:FieldModifier="public"
							AcceptsReturn="True"
							Background="White"
							BorderThickness="0"
							PreviewKeyUp="DataTextBox_PreviewKeyUp"
							ScrollViewer.HorizontalScrollBarVisibility="Disabled"
							ScrollViewer.VerticalScrollBarVisibility="Auto"
							Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
							TextChanged="DataTextBox_TextChanged"
							TextWrapping="Wrap" />
						<TextBlock
							Margin="0"
							Padding="0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							IsHitTestVisible="False"
							Opacity="0.5"
							Text="Type a message">
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding ElementName=DataTextBox, Path=Text}" Value="" />
												<Condition Binding="{Binding ElementName=DataTextBox, Path=IsKeyboardFocused}" Value="False" />
											</MultiDataTrigger.Conditions>
											<MultiDataTrigger.Setters>
												<Setter Property="Visibility" Value="Visible" />
											</MultiDataTrigger.Setters>
										</MultiDataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</Grid>
				</Border>
			</StackPanel>
		</Border>
		<!--  Buttons Panel  -->
		<Grid
			Grid.Row="1"
			Grid.Column="1"
			VerticalAlignment="Stretch"
			Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
			<StackPanel VerticalAlignment="Bottom" Orientation="Horizontal">
				<Button
					x:Name="SendButton"
					Width="30"
					Height="30"
					Margin="0,0,0,10"
					Click="SendButton_Click"
					Style="{DynamicResource RoundCornerBlue}">
					<Viewbox>
						<ContentControl
							Margin="0"
							Padding="0"
							Content="{StaticResource Icon_MediaPlay}"
							Focusable="False" />
					</Viewbox>
				</Button>
				<Button
					x:Name="StopButton"
					Width="30"
					Height="30"
					Margin="10,0,10,10"
					Click="StopButton_Click"
					Style="{DynamicResource RoundCornerRed}">
					<Viewbox>
						<ContentControl
							Margin="0"
							Padding="0"
							Content="{StaticResource Icon_MediaStop}"
							Focusable="False" />
					</Viewbox>
				</Button>
			</StackPanel>
		</Grid>


	</Grid>
</UserControl>
