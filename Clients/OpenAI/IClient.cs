using JocysCom.VS.AiCompanion.Clients.OpenAI.Models;
using System.Collections.Generic;

public interface IClient
{
	user_list_response list_assistants(int limit, string order, string after, string before);
	assistant_object create_assistant(modify_assistant_request body);
	assistant_object get_assistant(string assistant_id);
	assistant_object modify_assistant(string assistant_id, modify_assistant_request body);
	user_delete_response delete_assistant(string assistant_id);
	string create_speech(create_speech_request body);
	object create_transcription(create_transcription_request body);
	object create_translation(create_translation_request body);
	batch create_batch(object body);
	user_list_response list_batches(string after, int limit);
	batch retrieve_batch(string batch_id);
	batch cancel_batch(string batch_id);
	create_chat_completion_stream_response create_chat_completion(create_chat_completion_request body);
	create_completion_response create_completion(create_completion_request body);
	create_embedding_response create_embedding(create_embedding_request body);
	user_list_response list_files(string purpose, int limit, string order, string after);
	@file create_file(create_file_request body);
	user_delete_response delete_file(string file_id);
	@file retrieve_file(string file_id);
	string download_file(string file_id);
	fine_tuning_job create_fine_tuning_job(create_fine_tuning_job_request body);
	list_paginated_fine_tuning_jobs_response list_paginated_fine_tuning_jobs(string after, int limit);
	fine_tuning_job retrieve_fine_tuning_job(string fine_tuning_job_id);
	fine_tuning_job cancel_fine_tuning_job(string fine_tuning_job_id);
	user_list_response list_fine_tuning_job_checkpoints(string fine_tuning_job_id, string after, int limit);
	list_paginated_fine_tuning_jobs_response list_fine_tuning_events(string fine_tuning_job_id, string after, int limit);
	images_response create_image_edit(create_image_edit_request body);
	images_response create_image(create_image_request body);
	images_response create_image_variation(create_image_variation_request body);
	list_models_response list_models();
	model retrieve_model(string model);
	user_delete_response delete_model(string model);
	create_moderation_response create_moderation(create_moderation_request body);
	user_list_response admin_api_keys_list(string after, string order, int limit);
	admin_api_key admin_api_keys_create(object body);
	admin_api_key admin_api_keys_get(string key_id);
	object admin_api_keys_delete(string key_id);
	user_list_response list_audit_logs(object effective_at, List<string> project_ids, List<audit_log_event_type> event_types, List<string> actor_ids, List<string> actor_emails, List<string> resource_ids, int limit, string after, string before);
	usage_response usage_costs(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> group_by, int limit, string page);
	user_list_response list_invites(int limit, string after);
	invite invite_user(invite_request body);
	invite retrieve_invite(string invite_id);
	user_delete_response delete_invite(string invite_id);
	user_list_response list_projects(int limit, string after, bool include_archived);
	project create_project(project_update_request body);
	project retrieve_project(string project_id);
	project modify_project(string project_id, project_update_request body);
	user_list_response list_project_api_keys(string project_id, int limit, string after);
	project_api_key retrieve_project_api_key(string project_id, string key_id);
	user_delete_response delete_project_api_key(string project_id, string key_id);
	project archive_project(string project_id);
	user_list_response list_project_rate_limits(string project_id, int limit, string after, string before);
	project_rate_limit update_project_rate_limits(string project_id, string rate_limit_id, project_rate_limit_update_request body);
	user_list_response list_project_service_accounts(string project_id, int limit, string after);
	project_service_account_create_response create_project_service_account(string project_id, project_update_request body);
	project_service_account retrieve_project_service_account(string project_id, string service_account_id);
	user_delete_response delete_project_service_account(string project_id, string service_account_id);
	user_list_response list_project_users(string project_id, int limit, string after);
	user create_project_user(string project_id, project_user_create_request body);
	user retrieve_project_user(string project_id, string user_id);
	user modify_project_user(string project_id, string user_id, user_role_update_request body);
	user_delete_response delete_project_user(string project_id, string user_id);
	usage_response usage_audio_speeches(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> user_ids, List<string> api_key_ids, List<string> models, List<string> group_by, int limit, string page);
	usage_response usage_audio_transcriptions(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> user_ids, List<string> api_key_ids, List<string> models, List<string> group_by, int limit, string page);
	usage_response usage_code_interpreter_sessions(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> group_by, int limit, string page);
	usage_response usage_completions(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> user_ids, List<string> api_key_ids, List<string> models, bool batch, List<string> group_by, int limit, string page);
	usage_response usage_embeddings(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> user_ids, List<string> api_key_ids, List<string> models, List<string> group_by, int limit, string page);
	usage_response usage_images(int start_time, int end_time, string bucket_width, List<string> sources, List<string> sizes, List<string> project_ids, List<string> user_ids, List<string> api_key_ids, List<string> models, List<string> group_by, int limit, string page);
	usage_response usage_moderations(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> user_ids, List<string> api_key_ids, List<string> models, List<string> group_by, int limit, string page);
	usage_response usage_vector_stores(int start_time, int end_time, string bucket_width, List<string> project_ids, List<string> group_by, int limit, string page);
	user_list_response list_users(int limit, string after, List<string> emails);
	user retrieve_user(string user_id);
	user modify_user(string user_id, user_role_update_request body);
	user_delete_response delete_user(string user_id);
	realtime_session_create_response create_realtime_session(realtime_session_create_request body);
	thread_object create_thread(create_thread_request body);
	run_object create_thread_and_run(create_thread_and_run_request body);
	thread_object get_thread(string thread_id);
	thread_object modify_thread(string thread_id, modify_thread_request body);
	user_delete_response delete_thread(string thread_id);
	user_list_response list_messages(string thread_id, int limit, string order, string after, string before, string run_id);
	message_object create_message(string thread_id, create_message_request body);
	message_object get_message(string thread_id, string message_id);
	message_object modify_message(string thread_id, string message_id, modify_run_request body);
	user_delete_response delete_message(string thread_id, string message_id);
	user_list_response list_runs(string thread_id, int limit, string order, string after, string before);
	run_object create_run(string thread_id, List<string> include, create_run_request body);
	run_object get_run(string thread_id, string run_id);
	run_object modify_run(string thread_id, string run_id, modify_run_request body);
	run_object cancel_run(string thread_id, string run_id);
	user_list_response list_run_steps(string thread_id, string run_id, int limit, string order, string after, string before, List<string> include);
	run_step_object get_run_step(string thread_id, string run_id, string step_id, List<string> include);
	run_object submit_tool_ouputs_to_run(string thread_id, string run_id, submit_tool_outputs_run_request body);
	upload create_upload(create_upload_request body);
	upload cancel_upload(string upload_id);
	upload complete_upload(string upload_id, complete_upload_request body);
	upload_part add_upload_part(string upload_id, add_upload_part_request body);
	user_list_response list_vector_stores(int limit, string order, string after, string before);
	vector_store_object create_vector_store(create_vector_store_request body);
	vector_store_object get_vector_store(string vector_store_id);
	vector_store_object modify_vector_store(string vector_store_id, update_vector_store_request body);
	user_delete_response delete_vector_store(string vector_store_id);
	vector_store_file_batch_object create_vector_store_file_batch(string vector_store_id, create_vector_store_file_batch_request body);
	vector_store_file_batch_object get_vector_store_file_batch(string vector_store_id, string batch_id);
	vector_store_file_batch_object cancel_vector_store_file_batch(string vector_store_id, string batch_id);
	user_list_response list_files_in_vector_store_batch(string vector_store_id, string batch_id, int limit, string order, string after, string before, string filter);
	user_list_response list_vector_store_files(string vector_store_id, int limit, string order, string after, string before, string filter);
	vector_store_file_object create_vector_store_file(string vector_store_id, create_vector_store_file_request body);
	vector_store_file_object get_vector_store_file(string vector_store_id, string file_id);
	user_delete_response delete_vector_store_file(string vector_store_id, string file_id);
}
