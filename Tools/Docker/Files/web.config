<configuration>
    <system.webServer>
        <!--
PREREQUISITES:
    1. Install URL Rewrite Module 2.1:
        https://www.iis.net/downloads/microsoft/url-rewrite
    2. Install Application Request Routing (ARR) 3.0:
        https://www.iis.net/downloads/microsoft/application-request-routing

ENABLE ARR PROXYING:
    By default ARR is installed but proxying is disabled.
    In IIS Manager:
    1) Select the SERVER node (the top node in the tree).
    2) Open "Application Request Routing Cache".
    3) In the Actions pane, click "Server Proxy Settings…".
    4) Check "Enable proxy" (optionally also "Reverse rewrite host in response headers").
    5) Click Apply.

PRESERVE HOST HEADER:
    If you do not preserve the host header, ARR will overwrite it
    with the host:port from your <action> URL, which can break CORS,
    WebSockets, or services that check the Host/origin.
    To preserve the client’s Host header:
    In IIS Manager:
    1) Select the SERVER node.
    2) Click "Configuration Editor".
    3) In the Section field enter: system.webServer/proxy
    4) Set preserveHostHeader to True.
    5) Click Apply.
		
ALLOW A SERVER VARIABLE TO BE SET IN A REWRITE RULE
    In IIS Manager:
    1) Select the SERVER node (the top node in the tree).
    2) Open "URL Rewrite".
    3) In the Actions pane click "View Server Variables".
    4) Click "Add…".
    5) Enter the name of the variable/header
        (e.g. HTTP_SEC_WEBSOCKET_EXTENSIONS) and click OK.

DEBUGGING: Capture raw HTTP inside your container
    1) Restart your podman/docker container with NET_RAW and NET_ADMIN:
        podman run &#45;&#45;cap-add NET_RAW &#45;&#45;cap-add NET_ADMIN …
    2) From the host:
        podman exec -it -u 0 n8n /bin/sh
    3) Inside the container, install tcpdump:
        apk update && apk add tcpdump
    4) Run tcpdump against port 5678:
        tcpdump -i any -A 'dst port 5678'
    -->
        <!-- Allow Web-Sockets to be upgraded -->
        <webSocket enabled="true" />
        <rewrite>
            <rules>
				<!-- Permanent redirection to HTTPS -->
				<rule name="Redirect to HTTPS" stopProcessing="true">
					<match url="(.*)" />
					<conditions>
						<add input="{HTTPS}" pattern="OFF" />
						<!-- Do not redirect if DEV, TEST or runs on local machine (debugging). -->
						<add input="{HTTP_HOST}" pattern="^\w*(dev|test|local)" negate="true" />
					</conditions>
					<action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
				</rule>
			    <!-- Open WebUI -->
                <rule name="chat-proxy" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTP_HOST}" pattern="^chat\.example\.com$" />
                    </conditions>
                    <action type="Rewrite" url="http://127.0.0.1:3000/{R:1}" appendQueryString="true" />
                </rule>
                <!-- Web Database -->
                <rule name="nocodb-proxy" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTP_HOST}" pattern="^nocodb\.example\.com$" />
                    </conditions>
                    <action type="Rewrite" url="http://127.0.0.1:8570/{R:1}" appendQueryString="true" />
                </rule>
                <!-- Podman/Docker Web Manager -->
                <rule name="portainer-proxy" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTP_HOST}" pattern="^portainer\.example\.com$" />
                    </conditions>
                    <action type="Rewrite" url="http://127.0.0.1:9000/{R:1}" appendQueryString="true" />
                </rule>
                <!-- PRTG Network Monitor -->
                <rule name="prtg-proxy" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTP_HOST}" pattern="^prtg\.example\.com$" />
                    </conditions>
                    <action type="Rewrite" url="http://127.0.0.1:8080/{R:1}" appendQueryString="true" />
                </rule>
                <!-- n8n AI Workflow -->
                <rule name="n8n-proxy" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTP_HOST}" matchType="Pattern" pattern="^n8n\.example\.com$" />
                    </conditions>
                    <action type="Rewrite" url="http://127.0.0.1:5678/{R:1}" appendQueryString="true" />
                </rule>
                <!-- CloudBeaver Database Editor -->
                <rule name="db-proxy" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTP_HOST}" matchType="Pattern" pattern="^db\.example\.com$" />
                    </conditions>
                    <action type="Rewrite" url="http://localhost:8978/{R:1}" appendQueryString="true" />
                    <serverVariables>
                        <!-- Fix DATA Loading Issue: Strip the header so ARR will not advertise permessage-deflate -->
                        <set name="HTTP_SEC_WEBSOCKET_EXTENSIONS" value="" />
                    </serverVariables>
                </rule>
            </rules>
        </rewrite>
        <security>
            <requestFiltering>
                <!-- value is in *bytes* -->
                <requestLimits maxAllowedContentLength="2147483647" />
            </requestFiltering>
        </security>
    </system.webServer>
</configuration>
