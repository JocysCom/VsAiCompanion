<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JocysCom.VS.AiCompanion.Plugins.Core</name>
    </assembly>
    <members>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Automation">
             <summary>
             Use to navigate via UI of the application.
             </summary>
             <example>
             Simplified sequence of steps for an AI to control a PC via remote connection (screen, mouse, keyboard).
            
             1. Capture Current Screen
                - Take a screenshot to perceive the current state of the interface.
                  Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.CaptureImage(System.Nullable{System.Int32},System.String,System.Nullable{System.Drawing.Rectangle},System.String,System.Drawing.Imaging.ImageFormat)" />.
            
             2. Analyze and Decide
                - Analyze the screenshot to determine the next action needed to progress toward the goal.
                  Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.AnalysePictures(System.String,System.String[])" />.
            
             3. Execute Action
                - Perform the decided action, such as:
                  - Move Mouse: Navigate the cursor to the desired coordinates.
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.MoveMouse(System.Int32,System.Int32,System.Threading.CancellationToken)" />.
                  - Click Mouse: Interact with elements by clicking as needed.
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.ClickMouseButton(System.Windows.Forms.MouseButtons,System.Int32)" />.
                  - Send Keyboard Input: Input necessary keystrokes or commands.
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.SendKeys(System.String)" />.
                  - Interact with UI Elements (e.g., buttons, fields):
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.PerformActionOnElement(System.String,JocysCom.ClassLibrary.Windows.AutomationAction,System.String[])" />.
                  - Wait for a UI Element to become available:
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.WaitForElement(System.String,System.Int32)" />.
                  - Check if a UI Element is available:
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.IsElementAvailable(System.String)" />.
            
             4. Verify Outcome
                - Take a screenshot after the action.
                  Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.CaptureImage(System.Nullable{System.Int32},System.String,System.Nullable{System.Drawing.Rectangle},System.String,System.Drawing.Imaging.ImageFormat)" />.
                - Analyze it to confirm that the action had the intended effect.
                  Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.AnalysePictures(System.String,System.String[])" />.
                - Optionally, check if a UI Element is available:
                  Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.IsElementAvailable(System.String)" />.
            
             5. Error Handling and Retrying
                - If verification is successful:
                  - Proceed to the next action.
                - If an error is detected:
                  - Retry the last action from the last successful state.
                  - Repeat the verification step.
                  - Optionally, wait for a UI Element to become available:
                    Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.WaitForElement(System.String,System.Int32)" />.
            
             6. Iterate Until Completion
                - Repeat steps 1-5 until the final goal is achieved.
            
             Notes:
                - Before starting any action, you can get information about all displays.
                  Use <see cref="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetDisplayInfo" />.
             </example>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetCanvasEditorElementPath">
            <summary>
            Get path to canvas AutomationElement
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetTempFolderPath">
            <summary>
            Get path to temp folder.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetCurrentCanvasPath">
            <summary>
            Retrieve current canvas path.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetCanvasContent">
            <summary>
            Get the content of the canvas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.SetCanvasContent(System.String)">
            <summary>
            Get the content of the canvas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetDisplayInfo">
            <summary>
            Get information about all displays, including their rectangles and where the mouse pointer can move from one monitor to another.
            Use this method if you need to use the mouse to interact with the application window or control.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetAllTopLevelWindowPaths">
            <summary>
            Retrieve paths to all top-level windows on the desktop. Use this to find applications opened by the user.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetElementProperties(System.String)">
            <summary>
            Get properties of a UI element specified by its path.
            </summary>
            <param name="elementPath">XPath-like path of the UI element.</param>
            <returns>List containing property names and values.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.FindElementsByConditions(JocysCom.ClassLibrary.Collections.KeyValue[])">
            <summary>
            Find UI elements matching specific conditions.
            Search will be done on `AutomationElement.RootElement`.
            </summary>
            <param name="conditions">List of property names and values to match.</param>
            <returns>List of XPath-like paths to the matching elements.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.PerformActionOnElement(System.String,JocysCom.ClassLibrary.Windows.AutomationAction,System.String[])">
            <summary>
            Performs the specified action on the given automation element.
            </summary>
            <param name="elementPath">The AutomationElement to interact with.</param>
            <param name="action">
            The action to perform. Note that some actions require specific parameters:
            - SetValue: parameters[0] is the string value to set.
            - WaitForInputIdle: parameters[0] (optional) is the wait time in milliseconds (string representing an integer).
            - ScrollVertical: parameters[0] is a string representing a `ScrollAmount` enum value (e.g., "LargeIncrement", "SmallIncrement").
            - ScrollHorizontal: parameters[0] is a string representing a `ScrollAmount` enum value (e.g., "LargeIncrement", "SmallIncrement").
            - SetScrollPercent: parameters[0] is the horizontal scroll percent (string representing a double), parameters[1] is the vertical scroll percent.
            - Move: parameters[0] is the x-coordinate (string representing a double), parameters[1] is the y-coordinate.
            - Resize: parameters[0] is the width (string representing a double), parameters[1] is the height.
            - SetRangeValue: parameters[0] is the value to set (string representing a double).
            Actions not listed above do not require parameters.
            </param>
            <param name="parameters">Optional parameters required for the action, as an array of strings.</param>
            <returns>True if the action was performed successfully.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetElementChildren(System.String)">
            <summary>
            Retrieve the child elements of a specified UI element.
            </summary>
            <param name="elementPath">XPath-like path of the parent UI element.</param>
            <returns>List of XPath-like paths to the child elements.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.WaitForElement(System.String,System.Int32)">
            <summary>
            Waits for a UI element specified by its path to become available within a given timeout.
            </summary>
            <param name="elementPath">XPath-like path of the UI element.</param>
            <param name="timeoutInMilliseconds">Maximum time to wait for the element.</param>
            <returns>True if the element becomes available within the timeout, false otherwise.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.IsElementAvailable(System.String)">
            <summary>
            Checks if a UI element specified by its path is currently available.
            </summary>
            <param name="elementPath">XPath-like path of the UI element.</param>
            <returns>True if the element is available, false otherwise.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetElementTree(System.String)">
            <summary>
            Retrieves the UI element hierarchy starting from the specified element.
            </summary>
            <param name="elementPath">XPath-like path of the root UI element.</param>
            <returns>An ElementNode representing the UI hierarchy.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.CaptureElementImageToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Captures an image of the specified UI element.
            </summary>
            <param name="elementPath">XPath-like path of the UI element.</param>
            <param name="format">The format of the image to capture.</param>
            <returns>Path to the captured image, that could be read with other function.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.MoveMouse(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves the mouse pointer to the specified screen coordinates.
            This method is typically used in a loop with taking screenshots and analyzing them to determine where to move the mouse.
            </summary>
            <param name="x">The x-coordinate of the screen in pixels.</param>
            <param name="y">The y-coordinate of the screen in pixels.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.ClickMouseButton(System.Windows.Forms.MouseButtons,System.Int32)">
            <summary>
            Simulates a mouse click with the specified button at the current cursor position.
            </summary>
            <param name="button">The mouse button to click (Left, Right, Middle).</param>
            <param name="delay">Delay between down and up in miliseconds. Default: 50</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.SendKeys(System.String)">
            <summary>
            Sends the specified keyboard input to the active application.
            </summary>
            <param name="keys">The keys to send (e.g., "{ENTER}", "Hello World").</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.TypeKeys(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Sends keystrokes corresponding to the specified Unicode string to the currently active window.
            </summary>
            <param name="s">The string to send.</param>
            <param name="millisecondsDelay">
             Delay in milliseconds between typing each character:
            - 0: Use this to paste the text without any typing delay.
            - 20: Use this value to simulate typical AI typing speed.
            - 200: Use this value to simulate typical human typing speed.
            Default is 0, meaning it pastes immediately.
            </param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Retrieves information about the element currently under the point.
            </summary>
            <param name="x">The x-coordinate of the screen in pixels.</param>
            <param name="y">The y-coordinate of the screen in pixels.</param>
            <returns>An OperationResult containing the element's properties.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.GetMousePosition">
            <summary>
            Retrieves the current mouse cursor position.
            </summary>
            <returns>Operation result containing the cursor position as a Point.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.MouseDown(System.Windows.Forms.MouseButtons)">
            <summary>
            Simulates pressing down a mouse button at the current cursor position.
            </summary>
            <param name="button">The mouse button to press down.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.MouseUp(System.Windows.Forms.MouseButtons)">
            <summary>
            Simulates releasing a mouse button at the current cursor position.
            </summary>
            <param name="button">The mouse button to release.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.ScrollMouse(System.Int32)">
            <summary>
            Simulates mouse wheel scrolling.
            </summary>
            <param name="delta">The amount to scroll. Positive to scroll up, negative to scroll down.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.DragAndDrop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Simulates a drag-and-drop operation from a starting point to an ending point.
            </summary>
            <param name="startX">The starting x-coordinate in pixels.</param>
            <param name="startY">The starting y-coordinate in pixels.</param>
            <param name="endX">The ending x-coordinate in pixels.</param>
            <param name="endY">The ending y-coordinate in pixels.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.KeyDown(System.Windows.Input.Key[])">
            <summary>
            Simulates pressing down a specific keyboard keys.
            </summary>
            <param name="keys">The keys to press down.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Automation.KeyUp(System.Windows.Input.Key[])">
            <summary>
            Simulates releasing a specific keyboard keys.
            </summary>
            <param name="keys">Key to release.</param>
            <returns>Operation result indicating success or failure.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Basic">
            <summary>
            Basic functions that allow AI to create and modify files.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.GetTokens(System.String,System.Int32@,System.Collections.Generic.List{System.String}@,System.String)">
            <summary>
            Get tokens.
            </summary>
            <param name="text">Input text.</param>
            <param name="count">Token count.</param>
            <param name="tokens">Token words.</param>
            <param name="modelName">Optiona. Model name. Default: "gpt-4o".</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.CountTokens(System.String,System.String)">
            <summary>
            Counts tokens. Does not take into account special tokens.
            </summary>
            <param name="text">Input text.</param>
            <param name="modelName">Open AI model name. Default: "gpt-4o".</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.CountFileTokens(System.String[],System.String)">
            <summary>
            Counts the tokens in the specified files, excluding special tokens. 
            Returns an array of token counts, where each count position corresponds to the file's position in the `paths` array.
            </summary>
            <param name="paths">List of file paths to read from.</param>
            <param name="modelName">OpenAI model name (default: "gpt-4o").</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.AutoContinue(System.String)">
            <summary>
            Use when you can't provide an answer in one response and need to split the answer.
            Use after reply when user asks to generate answers with permission to continue.
            Continue with the next part of the reply after this function call return "Please continue".
            </summary>
            <returns>Automatic reply from the user.</returns>
            <param name="reserved">Reserved. Send empty string as a value.</param>
            <exception cref="T:System.Exception">Error message explaining why execution failed.</exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.Wait(System.Int32)">
            <summary>
            Wait for a specified amount of time.
            </summary>
            <param name="millisecondsDelay">The number of milliseconds to wait. -1 to wait indefinitely.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.GetCurrentSystemInfo">
            <summary>
            Get the current system information: Current Date, OS Version, Architecture, Locale, Time Zone and GPS Geo Location.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ExecuteCommand(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Executes an external command with the option to run it either as a regular process or via PowerShell.
            Use runPowerShell = true when the command requires PowerShell-specific syntax (e.g., command substitution with $("…")).
            </summary>
            <param name="command">
            When runPowerShell is false, this should be the executable name (e.g., "git", "notepad.exe").
            When runPowerShell is true, this is interpreted as the script or command to execute by PowerShell.
            </param>
            <param name="arguments">
            The command-line arguments to pass. For PowerShell execution, these arguments will be appended to the script, so ensure proper formatting.
            </param>
            <param name="workingDirectory">
            The directory in which the command should be executed.
            </param>
            <param name="runPowerShell">
            Set to true to execute the command using PowerShell (with -NoProfile and -ExecutionPolicy Bypass).
            This should be chosen if the command string contains PowerShell-specific syntax, such as command substitution ($(…)).
            If the command is a simple executable call without such syntax, use false.
            </param>
            <returns>
            The standard output or error output of the executed process.
            </returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ExecuteProcess(System.Diagnostics.ProcessStartInfo)">
            <summary>
            Internal helper method to execute a process with the specified ProcessStartInfo.
            </summary>
            <param name="startInfo">The ProcessStartInfo with configuration for the process.</param>
            <returns>The combined output (or error output if present) from the process.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ConvertFile(System.String,System.String)">
            <summary>
            Read plain text content from files and documents.
            Supported source formats: .docx, .xlsx, .xls, .pdf
            Supported target formats: .txt
            </summary>
            <param name="sourcePath">File to read from.</param>
            <param name="targetPath">File to write to.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ReadFilesAsPlainText(System.String[])">
            <summary>
            Read plain text content from files and documents. Supported document formats include: .docx, .xlsx, .xls, .pdf.
            Supports reading multiple files at once.
            </summary>
            <param name="paths">List of files to read from.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ReadFiles(System.String[],System.Boolean,System.Boolean)">
            <summary>
            Read information and contents of files.
            </summary>
            <param name="paths">The list of files or folders to read from. If a path points to a folder, 
            all files within that folder will be processed.</param>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time); 
            `false` for metadata only.</param>
            <param name="recursive">When true, process subdirectories recursively when a folder is provided.</param>
            <returns>A list of DocItem objects containing the requested file information.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.WriteFileText(System.String,System.String)">
            <summary>
            Write file text content on user computer.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="text">The string to write to the file.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.WriteFileBytes(System.String,System.String)">
            <summary>
            Write file byte content on user computer.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="base64">The bytes represented as base64 to write to the file.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.CompareFilesAndReturnChanges(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.CompareContentsAndReturnChanges(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ModifyFile(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ModifyContents(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ModifyTextFile(System.String,System.Int64,System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ReadTextFile(System.String,System.Int64,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Basic.ReadTextFileLines(System.String,System.Int64,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.audio_timestamp_granularities">
            <summary>
            Specifies the timestamp granularities to populate for a transcription.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_timestamp_granularities.default">
            <summary>
            The default value that, when equivalent to a request's flags, specifies no specific audio timestamp granularity
            and defers to the default timestamp behavior.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_timestamp_granularities.word">
            <summary>
            The value that, when present in the request's flags, specifies that audio information should include word-level
            timestamp information.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_timestamp_granularities.segment">
            <summary>
            The value that, when present in the request's flags, specifies that audio information should include
            segment-level timestamp information.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper">
            <summary>
            File Helper
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.ModifyTextFile(System.String,System.Int64,System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.ReadTextFile(System.String,System.Int64,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.ReadTextFileLines(System.String,System.Int64,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.ModifyText(System.String,System.Int64,System.Int64,System.String)">
             <summary>
             Modifies text content by supporting line deletion, insertion, or updating through a combination of both.
             </summary>
             <param name="text">The text to operate on.</param>
             <param name="startLine">
             The 1-based line number indicating where the operation begins.
             For insertion, this is the line where the new content will be added before.
             </param>
             <param name="deleteLines">
             The number of lines to delete starting from the line number specified by "startLine"
             Set to 0 for insertion operations where existing lines are not to be removed.
             To delete all lines from the start line, use the maximum value of the integer type.
             </param>
             <param name="insertContents">
             The content to insert. For deletion operations, this should be set to null.
             For update operations, this contains the new content replacing the deleted lines.
             </param>
             <returns>Modified text.</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="startLine"/> is less than 1 or <paramref name="deleteLines"/> is negative.</exception>
             <example>
             Deleting lines:
             { text: "...text to modify...", startLine: 3, deleteLines: 2 }
             
             Inserting lines:
             { text: "...text to modify...", startLine: 4, deleteLines: 0, insertContents: "new content\r\nto insert from line 4" }
            
             Updating lines:
             { text: "...text to modify...", startLine: 4, deleteLines: 3, insertContents: "New content replacing lines 4-6" }
             </example>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.GetNewLineType(System.String)">
            <summary>
            Get new line type.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.GetNewLineType(System.IO.TextReader)">
            <summary>
            Get new line type.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.DetectFileProperties(System.String,System.Text.Encoding@,System.String@)">
            <summary>
            Detect file encoding and new line type.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.FindFiles(System.String,System.String,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
             Find files.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.ReadFileAsPlainText(System.String)">
            <summary>
            Read the content of a file in plain text. Supported document types include .docx, .xlsx, .xls, .pdf, .htm, .html and .pdf.
            </summary>
            <param name="path">The path of the file to be read.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FileHelper.ExpandPathsToFiles(System.String[],System.Boolean)">
            <summary>
            Expands a list of paths (files or folders) to a list of file paths.
            </summary>
            <param name="paths">Paths to files or folders. Folder paths will be expanded to include all contained files.</param>
            <param name="recursive">When true, include files in subdirectories of any folder paths.</param>
            <returns>A list of file paths.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.FunctionInvocationContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.FunctionInvocationContext.MethodForContext(System.String)">
            <summary>
            Context and rationale provided by the AI when invoking a function.
            </summary>
            <param name="reasonForInvocation">
            A detailed explanation of the purpose or context behind calling this function. 
            This should be a concise justification, up to 3 sentences,
            describing why this function call is necessary in the given situation.
            </param>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.FunctionInvocationContext.ContextMethodInfo">
            <summary>
            Get method info
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.FunctionInvocationContext.ContextParameterInfos">
            <summary>
            Get parameter info
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns">
            <summary>
            Glob patterns helper. Patterns used by `.gitignore` files.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Glob patterns. Used by `.gitignore` files.
            </summary>
            <param name="excludePatterns">Exclude patterns. Applies if not null.</param>
            <param name="includePatterns">Include patterns. Applies if not null.</param>
            <param name="useGitIgnoreFiles">Use git ignore files.</param>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.ExcludePatterns">
            <summary>Exclude patterns</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.IncludePatterns">
            <summary>Include patterns</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.GitExcludePatterns">
            <summary>GIT Exclude patterns</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.UseGitIgnoreFiles">
            <summary>Use `.gitignore` files.</summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.GetIgnoreFromText(System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> object from the given text.
            </summary>
            <param name="text">The text content to parse into ignore rules.</param>
            <returns>
            An <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> object containing the parsed rules, or <c>null</c> if no valid rules were found.
            </returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.GetIgnoreFromFile(System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> object from the specified file.
            </summary>
            <param name="path">The path to the file containing ignore rules.</param>
            <returns>
            An <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> object containing the parsed rules, or <c>null</c> if the file does not exist or contains no valid rules.
            </returns>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.IgnoreCache">
            <summary>
            Cache for <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> objects to improve performance.
            </summary>
            <remarks>Cache allows for this class to work 20 times faster.</remarks>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.GetIgnoreFromDirectory(System.String,System.Boolean)">
            <summary>
            Retrieves an <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> object from the specified folder, optionally using a cache.
            </summary>
            <param name="path">The folder path to retrieve the ignore object from.</param>
            <param name="cache">If <c>true</c>, the cache will be used to retrieve the ignore object.</param>
            <returns>
            An <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> object retrieved from the folder.
            </returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.GetGitIgnoresByDirectoryPath(System.String,System.Boolean,System.Boolean)">
            <summary>
            Retrieves <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> objects by searching for <c>.gitignore</c> files in the specified folder and optionally its parent directories.
            </summary>
            <param name="path">The folder path to start the search.</param>
            <param name="searchParentDirectories">
            If <c>true</c>, searches all parent directories for <c>.gitignore</c> files; otherwise, only searches the specified folder.
            </param>
            <param name="cache">If <c>true</c>, the cache will be used to retrieve the ignore object.</param>
            <returns>
            A list of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher"/> objects found in the folder and optionally its parent directories.
            </returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.IsIgnored(System.String,System.String)">
            <summary>
            Return true if file is ignored.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.IsGitIgnored(System.String,System.Boolean)">
            <summary>
            Returns true if file is ignored.
            </summary>
            <param name="filePath">Full path to the file.</param>
            <param name="searchParentDirectories">If `true`, searches all parent directories for `.gitignore` files; otherwise, only searches the file folder.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GlobPatterns.GetRelativePath(System.String,System.String)">
            <summary>
            Get relative path to `.gitignore`.
            </summary>
            <param name="relativeTo"></param>
            <param name="path"></param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.GpsLocation">
            <summary>
            GPS Location.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.GpsLocation.GetCurrentLocation">
            <summary>
            Get current GPS location.
            Windows 11: Location Privacy Setings -> [x] Let desktop apps access your location.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.HtmlHelper">
            <summary>
            HTML Helper.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.HtmlHelper.ReadHtmlAsPlainText(System.String)">
            <summary>
            Read HTML as plain text.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.IFileHelper">
            <summary>
            File Helper.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.IFileHelper.ModifyTextFile(System.String,System.Int64,System.Int64,System.String)">
             <summary>
             Modifies text content within a file by supporting line deletion, insertion, or updating through a combination of both.
             </summary>
             <param name="path">The full path to the text file to operate on.</param>
             <param name="startLine">
             The 1-based line number indicating where the operation begins.
             For insertion, this is the line where the new content will be added before.
             </param>
             <param name="deleteLines">
             The number of lines to delete starting from the line number specified by "startLine"
             Set to 0 for insertion operations where existing lines are not to be removed.
             To delete all lines from the start line, use the maximum value of the integer type.
             </param>
             <param name="insertContents">
             The content to insert into the file. For deletion operations, this should be set to null.
             For update operations, this contains the new content replacing the deleted lines.
             </param>
             <returns>A string indicating the outcome of the operation. Returns "OK" if successful.</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="startLine"/> is less than 1 or <paramref name="deleteLines"/> is negative.</exception>
             <example>
             Deleting lines:
             { path: "path/to/file.txt", startLine: 3, deleteLines: 2 }
             
             Inserting lines:
             { path: "path/to/file.txt", startLine: 4, deleteLines: 0, insertContents: "new content\r\nto insert from line 4" }
            
             Updating lines:
             { path: "path/to/file.txt", startLine: 4, deleteLines: 3, insertContents: "New content replacing lines 4-6" }
             </example>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.IFileHelper.ReadTextFile(System.String,System.Int64,System.Int64)">
            <summary>
            Reads text content from a file on the user's computer.
            </summary>
            <param name="path">The file to read from.</param>
            <param name="offset">offset to start reading from. Value is 0-based. Default: 0.</param>
            <param name="length">The number of characters to read. Defaults to the remaining length of the file if not specified.</param>
            <returns>Null if the operation was not successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.IFileHelper.ReadTextFileLines(System.String,System.Int64,System.Int64)">
            <summary>
            Reads text content from a file on the user's computer.
            </summary>
            <param name="path">The file to read from.</param>
            <param name="line">Line number to start reading from. Value is 1-based. Default: 1.</param>
            <param name="count">The number of lines to read. Defaults to the remaining length of the lines if not specified.</param>
            <returns>Null if the operation was not successful.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.image_quality">
            <summary>
            Image quality.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_quality.standard">
            <summary>
            Standard quality.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_quality.hd">
            <summary>
            High definition quality.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.image_size">
            <summary>
            Image size
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_size.size_1024x1024">
            <summary>
            1024x1024
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_size.size_1792x1024">
            <summary>
            1792x1024
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_size.size_1024x1792">
            <summary>
            1024x1792
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.image_style">
            <summary>
            Image style.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_style.vivid">
            <summary>
            Vivid style.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.image_style.natural">
            <summary>
            Natural style.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo">
            <summary>
            Represents the metadata of a file indexed by the Windows Search.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.ItemName">
            <summary>
            Gets or sets the name of the item, typically the file name including the extension.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.ItemPathDisplay">
            <summary>
            Gets or sets the full path of the item, suitable for display to the user.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.ItemTypeText">
            <summary>
            Gets or sets a text description of the item type (e.g., "JPEG image").
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.DateModified">
            <summary>
            Gets or sets the date the item was last modified.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.FileExtension">
            <summary>
            Gets or sets the file extension of the item.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.Size">
            <summary>
            Gets or sets the size of the item, in bytes.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.Author">
            <summary>
            Gets or sets the author of the document. Applicable to documents that store this metadata.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.Keywords">
            <summary>
            Gets or sets the keywords associated with the file. This can be a collection of keywords.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.Comment">
            <summary>
            Gets or sets any comment associated with the file.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.DateCreated">
            <summary>
            Gets or sets the date the item was created.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo.DateAccessed">
            <summary>
            Gets or sets the date the item was last accessed.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.ListErrorCode">
            <summary>
            Represents error codes for list operations.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.ListErrorCode.Success">
            <summary>Operation successful</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.ListErrorCode.ListNotFound">
            <summary>List not found</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.ListErrorCode.ListReadOnly">
            <summary>List is read-only</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.ListErrorCode.ListAlreadyExists">
            <summary>List already exists</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.ListErrorCode.ListItemNotFound">
            <summary>List item not found</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo">
            <summary>
            List Info.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.#ctor">
            <summary>
            List Info
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.Description">
            <summary>List description used for the user.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.Instructions">
            <summary>List Instructions for AI.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.IsReadOnly">
            <summary>If 'true' then AI can't modify the list.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.Items">
            <summary>List items: Key, Value, Comment.</summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.ShouldSerializeItems">
            <summary>Indicates whether the property should be serialized with the XML serializer.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListInfo.IsEmpty">
            <inheritdoc/>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.ListItem">
            <summary>
            Represents a versatile list item used in various contexts such as TODO lists, environment variable management, and diverse list compilations.
            Structured as a key-value pair with an optional comment, facilitating a broad spectrum of applications from settings configuration to task management.
            Aides in organizing data in a simple, yet effective manner, offering hints for creative AI utilization beyond predefined uses.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.Status">
            <summary>
            Optional. List item progress status.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.ShouldSerializeStatus">
            <summary>XML serializer should serialize the Status property only if it is not null</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.Key">
            <summary>
            The unique identifier or name for the list item.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.Value">
            <summary>
            Optional. The value associated with the key.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.IsProtected">
            <summary>
            Indicates whether the value should be masked.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.Comment">
            <summary>
            Optional. Provides additional information about the list item,
            such as task status (e.g., complete, pending) or extra details for settings and environment variables.
            It encourages to infer potential statuses or metadata that could enhance data handling or task management strategies creatively.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ListItem.Tags">
            <summary>
            Words or phrases that facilitate searching or categorization.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.MailConnectionSecurity">
            <summary>
            Connection security.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailConnectionSecurity.None">
            <summary>None</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailConnectionSecurity.Auto">
            <summary>Allow client to decide.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailConnectionSecurity.SslOnConnect">
            <summary>Use SSL or TLS encryption immediately.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailConnectionSecurity.StartTls">
            <summary>Use TLS encryption immediately after reading the greeting and capabilities of the server.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailConnectionSecurity.StartTlsWhenAvailable">
            <summary>Use TLS encryption immediately after reading the greeting and capabilities of the server, but only if STARTTLS is available.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat">
            <summary>
            Mail Text format.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.Plain">
            <summary>The plain text format.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.Text">
            <summary>An alias for the plain text format.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.Flowed">
            <summary>The flowed text format (as described in rfc3676).</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.Html">
            <summary>The HTML text format.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.Enriched">
            <summary>The enriched text format.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.CompressedRichText">
            <summary>The compressed rich text format.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat.RichText">
            <summary>The rich text format.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.PandocHelper">
            <summary>
            File converter.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.PandocHelper.ToolFolder">
            <summary>
            Path to folder where pandoc must be installed.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.PandocHelper.ConvertDocument(System.String,System.String)">
            <summary>
            Convert files.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel">
            <summary>
            Defines the access and execution levels for AI within applications,
            ranging from no permissions to full user-equivalent permissions.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel.Unknown">
            <summary>Unknown.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel.None">
            <summary>None: Read Internal. AI can only read data within the application.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel.Low">
            <summary>Low: Write Internal. AI can write or modify data within the application.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel.Medium">
            <summary>Medium: Read External. AI can read external data sources outside the application.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel.High">
            <summary>High: Write External. AI can modify external data sources outside the application.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel.Critical">
            <summary>Critical: Full Access. AI has full access, equivalent to a user, including running applications and scripts.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevelAttribute">
            <summary>
            Specifies the risk level of a method or a class.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevelAttribute.Level">
            <summary>
            Gets the risk level assigned to the method or class.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevelAttribute.#ctor(JocysCom.VS.AiCompanion.Plugins.Core.RiskLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:JocysCom.VS.AiCompanion.Plugins.Core.RiskLevelAttribute"/> class with a specified risk level.
            </summary>
            <param name="level">The risk level to be assigned.</param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper">
            <summary>
            Capture Screen, Window and Region screenshots.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.GetTempFolderPath">
            <summary>
            Get path to temp folder.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.CaptureScreen(System.Nullable{System.Int32},System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Capture screen image
            </summary>
            <param name="screenId"></param>
            <param name="imageFolder"></param>
            <param name="format"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.CaptureWindow(System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Capture Window image.
            </summary>
            <param name="name"></param>
            <param name="imageFolder"></param>
            <param name="format"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.CaptureRegion(System.Nullable{System.Drawing.Rectangle},System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Capture screen region.
            </summary>
            <param name="region"></param>
            <param name="imageFolder"></param>
            <param name="format"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.CaptureUserDefinedRegion(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Capture user defined region image.
            </summary>
            <param name="imageFolder"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.GetCaptureRegion">
            <summary>
            Ask user to define screenshot capturing region.
            </summary>
            <returns>Image capturing region.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.ShowCaptureOverlay">
            <summary>
            ShowCaptureOverlay method with modifications for semaphore signaling and escape key handling.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.ScreenshotHelper.PrepareFilePath(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Get temp path.
            </summary>
            <param name="folderPath"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.transcription">
            <summary>Transcription text.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.transcription.text">
            <summary>Transcription text.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.transcription.language">
            <summary>Language</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.transcription.duration">
            <summary>Duration</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format">
            <summary> The format of the transcription. </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format.text">
            <summary> Plain text only. </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format.json">
            <summary> Plain text only. </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format.verbose_json">
            <summary> Plain text provided with additional metadata, such as duration and timestamps. </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format.srt">
            <summary> Text formatted as SubRip (.srt) file. </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format.vtt">
            <summary> Text formatted as a Web Video Text Tracks, a.k.a. WebVTT, (.vtt) file. </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Database">
            <summary>
            Allows AI to execute queries or stored procedures on a database. For example, it can retrieve a database schema and construct complex results. Use database permissions to restrict AI's access.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.ExecuteNonQuery(System.String,System.String,System.String)">
            <summary>Execute non query command on database. Return number of rows affected.</summary>
            <param name="cmdText">SQL Command Text.</param>
            <param name="cmdType">SQL Command Type.
            "Text" = An SQL text command.
            "StoredProcedure" - The name of a stored procedure.
            "TableDirect" - The name of a table.
            </param>
            <param name="connectionString">
            The database connection string.
            If the connection string is not provided, the default SQLite database is used.
            The SQL syntax and execution behavior will be determined based on the database type specified in the connection string (e.g., SQLite, MS-SQL, Oracle).
            </param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.ExecuteDataTable(System.String,System.String,System.String)">
            <summary>SQL query command on database. Returns resutls as CSV.</summary>
            <param name="cmdText">SQL Command Text.</param>
            <param name="cmdType">SQL Command Type.
            "Text" = An SQL text command.
            "StoredProcedure" - The name of a stored procedure.
            "TableDirect" - The name of a table.
            </param>
            <param name="connectionString">
            The database connection string.
            If the connection string is not provided, the default SQLite database is used.
            The SQL syntax and execution behavior will be determined based on the database type specified in the connection string (e.g., SQLite, MS-SQL, Oracle).
            </param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.GetDescription(System.String,System.String,System.String,System.String)">
            <summary>
            Get description text of database schema, table or column.
            Specify only the levels relevant to the target object for which the description is being set.
            When specifying a column, for instance, both the table and schema to which it belongs must also be indicated.
            </summary>
            <param name="connectionString">Databse connection string.</param>
            <param name="schema">Schema name.</param>
            <param name="table">Table name.</param>
            <param name="column">Column name.</param>
            <returns>Item description.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.SetDescription(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Set description of database schema, table or column.
            Specify only the levels relevant to the target object for which the description is being set.
            When specifying a column, for instance, both the table and schema to which it belongs must also be indicated.
            </summary>
            <param name="connectionString">Database connection string.</param>
            <param name="schema">Schema name.</param>
            <param name="table">Table name.</param>
            <param name="column">Column name.</param>
            <param name="description">Description text.</param>
            <returns>0 (success) or 1 (failure).</returns>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Database.GetDatabasesFolderPath">
            <summary>
            Get path to databases folder.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.GetDatabaseNames(System.String)">
            <summary>
            Get SQLite database names filtered by an optional regular expression pattern.
            </summary>
            <param name="pattern">The regex pattern to filter database names. If null, all names are returned.</param>
            <returns>A List of filtered database names.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.CreateDatabase(System.String)">
            <summary>
            Creates a new SQLite database.
            </summary>
            <param name="databaseName">Name of the database</param>
            <returns>0 operation successfull, -3 database already exists.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.DeleteDatabase(System.String)">
            <summary>
            Deletes an existing SQLite database.
            </summary>
            <param name="databaseName">Name of the database</param>
            <returns>0 operation successfull, -1 database not found, -2 database is readonly.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Database.SearchAndSaveFilesToTable(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Searches for files and inserts them into a database table with a unique Id column.
            </summary>
            <param name="connectionString">
            The database connection string.
            If the connection string is not provided, the default SQLite database is used.
            The SQL syntax and execution behavior will be determined based on the database type specified in the connection string (e.g., SQLite, MS-SQL, Oracle).
            </param>
            <param name="tableName">Name of the table to insert files into.</param>
            <param name="searchPath">Directory path to search for files.</param>
            <param name="searchPattern">Search pattern for files (e.g., "*.txt").</param>
            <param name="allDirectories">Whether to search all subdirectories.</param>
            <param name="includePatterns">Patterns to include.</param>
            <param name="excludePatterns">Patterns to exclude.</param>
            <param name="useGitIgnore">Whether to respect .gitignore files.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>Number of files inserted.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Lists">
            <summary>
            Allows AI to manage various lists, such as task lists, to-do lists, task progress, and completion lists. It can also be used to store environment variables or settings.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Lists.AllLists">
            <summary>
            Property set from the external class.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetFilteredListInfos">
            <summary>
            Retrieves all lists.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetFilteredListInfo(System.String)">
            <summary>
            Get list by name.
            </summary>
            <param name="listName">Name of the list</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetList(System.String,System.Boolean)">
            <summary>
            Get list information
            </summary>
            <param name="listName">Name of the list</param>
            <param name="includeItems">`true` to include items, `false` to get information only.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetListNames(System.String)">
            <summary>
            Get List names filtered by an optional regular expression pattern.
            </summary>
            <param name="pattern">The regex pattern to filter list names. If null, all names are returned.</param>
            <returns>A List of filtered list names.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetLists(System.String)">
            <summary>
            Get Lists filtered by regular expression pattern.
            </summary>
            <param name="pattern">The regex pattern to filter by list name. If null, all lists are returned.</param>
            <returns>Filtered lists.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.LoadListFromCsv(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Load items into existing list from the CSV file.
            </summary>
            <param name="listName">Name of the list</param>
            <param name="path">Path to the CSV file</param>
            <param name="keyColumn">Use csv column for the Key property.</param>
            <param name="statusColumn">Optional. Use csv column for the Status property.</param>
            <param name="valueColumn">Optional. Use csv column for the Value property.</param>
            <param name="commentColumn">Optional. Use csv column for the Comment property.</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Lists.FilterPath">
            <summary>
            Filter list by parent, to make sure that only Global and child lists are selected.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.CreateList(System.String,System.String,System.String)">
            <summary>
            Creates a new list.
            </summary>
            <param name="listName">Name of the list</param>
            <param name="description">Description provides user-facing details of the list.</param>
            <param name="instructions"> Instructions, outline how AI should operate based on the list's content.</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.UpdateList(System.String,System.String,System.String)">
            <summary>
            Updates an existing list.
            </summary>
            <param name="listName">Name of the list</param>
            <param name="description">Optional. Description provides user-facing details of the list.</param>
            <param name="instructions">Optional. Instructions, outline how AI should operate based on the list's content.</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.DeleteList(System.String)">
            <summary>
            Deletes an existing list.
            </summary>
            <param name="listName">Name of the list</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.ClearList(System.String)">
            <summary>
            Clears all items from a list.
            </summary>
            <param name="listName">Name of the list</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.SortList(System.String)">
            <summary>
            Sort items by key.
            </summary>
            <param name="listName">Name of the list</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.UpdateListItem(System.String,System.String,System.String,System.Nullable{JocysCom.ClassLibrary.ProgressStatus},System.String,System.Nullable{System.Int32})">
            <summary>
            Sets or adds an item to a list.
            </summary>
            <param name="listName">Name of the list</param>
            <param name="key">Item key.</param>
            <param name="status">Item progress status.</param>
            <param name="value">Item value.</param>
            <param name="comment">Item comment.</param>
            <param name="index">Optional. The zero-based index at which item should be inserted.</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.SetListItemStatus(System.String,System.String,System.Nullable{JocysCom.ClassLibrary.ProgressStatus})">
            <summary>
            Sets list item progress status.
            </summary>
            <param name="listName">Name of the list</param>
            <param name="key">Item key.</param>
            <param name="status">Item progress status.</param>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetListItem(System.String,System.String)">
            <summary>
            Retrieves an item from a list.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.DeleteListItem(System.String,System.String)">
            <summary>
            Deletes an item from a list.
            </summary>
            <returns>OperationResult with Success or a corresponding error code.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Lists.GetListItems(System.String)">
            <summary>
            Retrieves all items from a list.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Mail">
            <summary>
            Allows AI to check and send mail.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Mail.SendCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Mail.Send(System.String[],System.String,System.String,JocysCom.VS.AiCompanion.Plugins.Core.MailTextFormat)">
            <summary>
            Send mail file text content on user computer.
            </summary>
            <param name="recipients">Email address of recipients.</param>
            <param name="subject">Email subject.</param>
            <param name="body">Email body.</param>
            <param name="bodyTextFormat">Email body text format.</param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia">
            <summary>
            TTS functions, in combination with Jocys.com TTS Monitor app (Jocys.com/TTS), allow AI to speak and narrate stories or dialogues using text-to-speech voices. Works well with Windows Voice Typing. Enable text-to-speech:
            AI Companion > Enable all TTS plugins in this tab. Add message instruction for AI like "Answer with text-to-speech voice." 
            TTS Monitor > [Options] tab > [Monitor: Server] tab > check "Enable" checkbox. 
            TTS Monitor > [Options] tab > [Monitor: Display] tab > uncheck "Enable" checkbox.
            </summary>
            <summary>
            Multimedia, encompassing Text (as symbolic representations), Audio (as pressure waves), and Video (as electromagnetic waves),
            should be addressed through unified methods, given the prevalence of files that integrate text, audio, and video components.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.AISpeakCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.AISpeak(System.String,System.Nullable{JocysCom.VS.AiCompanion.Plugins.Core.TtsMonitor.VoiceGender},System.String,System.Nullable{System.Boolean})">
            <summary>
            Triggers the AI Avatar to articulate the provided text through speech synthesis. 
            This function must be used by the AI whenever it is required to speak or respond to user queries.
            This direct association with the AI's speech mechanism ensures that all verbal outputs adhere to a consistent and controlled format.
            This funtion utilizing Microsoft Azure Speech Service, compatible with Speech Synthesis Markup Language Version 1.0 (SSML 1.0).
            Use SSML for the input text when supported by the language to refine speech traits such as tone, pitch, and pace for more natural and expressive output.
            </summary>
            <param name="text">String that the AI is expected to vocalize.</param>
            <param name="gender">(optional) Character gender: 'Male', 'Female', 'Neutral'. Default: 'Male'. Default is set by the user.</param>
            <param name="language">(optional) Language Culture. Use Language[-Location] format. For example: 'en-GB'. Default is set by the user.</param>
            <param name="isSsml">(optional) Text format is the SSML-formatted string. Default is auto.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.PlayText(System.String,System.String,System.Nullable{JocysCom.VS.AiCompanion.Plugins.Core.TtsMonitor.VoiceGender},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Start playing text. This could be used for speaking with the user or narrating books or stories.
            </summary>
            <param name="name">Character name.</param>
            <param name="text">Text to play.</param>
            <param name="gender">Character gender: 'Male', 'Female', 'Neutral'. Default: 'Male'.</param>
            <param name="language">Language Culture. Use Language[-Location] format. For example: 'en-GB'. Default is set by the user.</param>
            <param name="effect">Sound effects:
            'Default', 'Beast', 'Demon', 'Dragonkin', 'Elemental',
            'Giant', 'Humanoid', 'Mechanical', 'Undead'. Default is 'Default' for humans.
            </param>
            <param name="group">Message chat group: 'Quest'. Default: 'Quest'.</param>
            <param name="pitch">Voice pitch: Range from -10 to 10. Default is set by the user.</param>
            <param name="rate">Voice rate or speed: Range from -10 to 10.  Default is set by the user.</param>
            <param name="volume">Voice volume. Range from 0 to 100.  Default is set by the user.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.StopText">
            <summary>
            Stop text-to-speech playback.
            </summary>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.TextToSpeech(System.String,System.String)">
            <summary>
            Generates an audio using the specified prompt by using OpenAI TTS (text-to-speech) voice models.
            </summary>
            <param name="text">The text to generate audio for.</param>
            <param name="voice">Generated speech voice: "alloy", "echo", "fable", "onyx", "nova" or "shimmer"</param>
            <returns>Operation result containing the path to the generated voice file.</returns>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.TextToSpeechCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.TranscribeAudio(System.String,System.String[],System.String,JocysCom.VS.AiCompanion.Plugins.Core.audio_timestamp_granularities,JocysCom.VS.AiCompanion.Plugins.Core.audio_transcription_format)">
            <summary>
            Transcribes the provided audio files to text using the OpenAI transcription service.
            </summary>
            <param name="prompt">An optional text to guide the style or content of the transcription. The prompt should be in the specified language.</param>
            <param name="language">The language of the audio files. If not specified, the language will be detected automatically.</param>
            <param name="timestampGranularities">The desired timestamp intervals in the transcription.</param>
            <param name="responseFormat">The format of the transcription response.</param>
            <param name="pathsOrUrls">
            An array of file paths or URLs pointing to the audio files to be transcribed. The files must be in one of the supported formats (mp3, mp4, mpeg, mpga, m4a, wav, or webm), and each must not exceed 25 MB in size.
            </param>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.TranscribeAudioCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.VideoToTextCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GetTempFolderPath">
            <summary>
            Get path to temp folder.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.AnalysePictures(System.String,System.String[])">
            <summary>
            Analyzes visual content (pictures/photos) based on given instructions using an AI model.
            Supported file types: .jpg, .png, .gif, .bmp, .tiff
            Do not use for analyzing plain text files.
            Send all the pictures at once if they belong to one document.
            </summary>
            <param name="instructions">Guidelines for AI to follow during image analysis.</param>
            <param name="pathsOrUrls">Paths to local files or URLs to images for analysis. Supported image file types: .jpg, .png, .gif, .bmp, .tiff</param>
            <returns>Analysis results.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.CaptureCameraImage">
            <summary>
            Captures a snapshot from the default camera and saves it to a temporary file as a JPG.
            This function is designed to allow AI assistants to visually analyze real-time data,
            such as identifying objects held by a user. Returns the file path of the captured image.
            </summary>
            <returns>Path to the file containing the captured image.</returns>
            <exception cref="T:System.Exception">Thrown when the image capture fails.</exception>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.CaptureCameraImageCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.CaptureImage(System.Nullable{System.Int32},System.String,System.Nullable{System.Drawing.Rectangle},System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Capture an image of the screen, window or a defined region based on supplied parameters.
            If no parameters are provided, default to capturing a user-defined region.
            </summary>
            <param name="screenId">Screen ID to capture. If provided, it will capture the specific screen.</param>
            <param name="windowName">Window name to capture. If provided, it will capture the specified window.</param>
            <param name="region">Region to capture. If provided, it will capture the specified region.</param>
            <param name="imageFolder">Folder path to save the captured image. If not provided, it defaults to the temp directory.</param>
            <param name="format">Image format for the captured image. If not provided, it defaults to PNG.</param>
            <returns>Operation result containing the path to the captured image.</returns>
            <exception cref="T:System.ArgumentException">Thrown if invalid parameters are supplied.</exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GenerateQrCodeImage(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Generates a QR code in the specified format from the given content and saves it to the provided path.
            </summary>
            <param name="content">The text content to encode into the QR code.</param>
            <param name="pixelsPerModule">The size of each QR code module in pixels. Default is 20.</param>
            <param name="qrImageFormat">The desired output format for the QR code (`svg` or `png`). Default and recommended is `svg`.</param>
            <param name="darkColorHtmlHex">The HTML HEX color for the QR code pixels. Default is `#000000`.</param>
            <param name="lightColorHtmlHex">The background HTML HEX color for the QR code. Default is `#FFFFFF`.</param>
            <returns>An the path to the generated QR code image on success</returns>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GenerateQrCodeImageCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GenerateImage(System.String,JocysCom.VS.AiCompanion.Plugins.Core.image_size,JocysCom.VS.AiCompanion.Plugins.Core.image_style,JocysCom.VS.AiCompanion.Plugins.Core.image_quality)">
            <summary>
            Generates an image using the specified prompt.
            </summary>
            <param name="prompt">A textual description of the desired image.</param>
            <param name="imageSize">The width of the generated image in pixels (default is `size_1024x1024`).</param>
            <param name="imageStyle">The style to apply to the generated image. Default is `vivid`.</param>
            <param name="imageQuality">The quality level of the generated image. Default is `standard`</param>
            <returns>Operation result containing the path to the generated image.</returns>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GenerateImageCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.ModifyImage(System.String,System.String,System.String,JocysCom.VS.AiCompanion.Plugins.Core.image_size)">
            <summary>
            Modify an image using the specified prompt.
            </summary>
            <param name="originalImagePath">Full file path to the original image.</param>
            <param name="prompt">A textual description of the desired image. Prompt should describe the full new image, not just the erased area of the mask.</param>
            <param name="imageSize">The width of the generated new image in pixels (default is `size_1024x1024`).</param>
            <param name="maskImagePath">Path to the mask.  The transparent areas of the mask indicate where the image should be edited.</param>
            <returns>Operation result containing the path to the generated image.</returns>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.ModifyImageCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.ConvertToPDF(System.String,System.String)">
            <summary>
            Convert file to PDF.
            </summary>
            <param name="inputFilePath">Source file.</param>
            <param name="outputFilePath">Target PDF File.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GetPdfMetadata(System.String[])">
            <summary>
            Counts the pages in the specified PDF files and reads metadata.
            Returns an array a list of metadata key-value pairs, where each count position corresponds to the file's position in the `paths` array.
            </summary>
            <param name="paths">List of file paths to read from.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.ConvertPdfToImage(System.String,System.String,System.Int32[])">
            <summary>
            Convert PDF to Image.
            </summary>
            <param name="pdfFilePath">Source PDF file.</param>
            <param name="outputFolder">Target folder for JPG Files.</param>
            <param name="pages">Optional. The zero-based index array of page numbers to convert. If null or empty, all pages are converted.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.GetStructuredImageAnalysisInstructions">
            <summary>
            Will be used by plugins manager.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Multimedia.ConvertPdfToStructuredJson(System.String,System.Int32[])">
            <summary>
            Converts a PDF file to structured JSON format, with an option to specify a page range.
            </summary>
            <param name="pdfFilePath">The path to the source PDF file.</param>
            <param name="pages">Optional. The zero-based index array of page numbers to convert. If null or empty, all pages are converted.</param>
            <returns>An OperationResult containing a list of structured JSON strings.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Search">
            <summary>
            Functions that enable AI to perform indexed searches. Use "Windows Search Settings" to add more folders to your search.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Search._databasePath">
            <summary>
            Database path. Set by external program.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Search.SearchWindowsIndex(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Searches the Windows Index for files matching the specified criteria. This method allows for extensive search capabilities, including text content, file metadata, and more.
            </summary>
            <param name="contents">Contents of the file. Uses CONTAINS in the query for partial matching.</param>
            <param name="itemName">The name of the item, typically the file name including the extension. Uses CONTAINS in the query for partial matching.</param>
            <param name="itemPath">The full path of the item, suitable for display to the user. Uses CONTAINS in the query for partial matching.</param>
            <param name="itemTypeText">A text description of the item type, e.g., "JPEG image". Uses CONTAINS in the query for partial matching.</param>
            <param name="fileExtension">The file extension of the item. Uses CONTAINS in the query for partial matching.</param>
            <param name="sizeMin">The minimum size of the item, in bytes.</param>
            <param name="sizeMax">The maximum size of the item, in bytes.</param>
            <param name="author">The author of the document. Applicable to documents that store this metadata. Uses CONTAINS in the query for partial matching.</param>
            <param name="title">The title of the document. Uses CONTAINS in the query for partial matching.</param>
            <param name="comment">Any comment associated with the file. Uses CONTAINS in the query for partial matching.</param>
            <param name="dateCreatedStart">The start date for when the item was created.</param>
            <param name="dateCreatedEnd">The end date for when the item was created.</param>
            <param name="dateModifiedStart">The start date for when the item was last modified.</param>
            <param name="dateModifiedEnd">The end date for when the item was last modified.</param>
            <param name="dateAccessedStart">The start date for when the item was last accessed.</param>
            <param name="dateAccessedEnd">The end date for when the item was last accessed.</param>
            <returns>A list of <see cref="T:JocysCom.VS.AiCompanion.Plugins.Core.IndexedFileInfo"/> objects that match the specified search criteria.</returns>
            <remarks>
            This method leverages the Windows Search Index, offering a powerful search functionality across various file properties.
            For properties like dates and size, where partial matching isn't applicable, the method uses SQL expressions to define ranges.
            </remarks>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Search.SearchAndSaveFilesToCsv(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Searches for files  and write search results as csv file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="searchPath">Directory path to search for files.</param>
            <param name="searchPattern">Search pattern for files (e.g., "*.txt").</param>
            <param name="allDirectories">Whether to search all subdirectories.</param>
            <param name="includePatterns">Patterns to include.</param>
            <param name="excludePatterns">Patterns to exclude.</param>
            <param name="useGitIgnore">Whether to respect .gitignore files.</param>
            <returns>Number of files inserted.</returns>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Search.SearchEmbeddingsCallback">
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Search.SearchEmbeddings(System.String,System.Int32,System.Int32)">
            <summary>
            Search the embedding database for relevant content in files and documents.
            </summary>
            <param name="message">Search query.</param>
            <param name="skip">Number of records to skip. Recommended: 0</param>
            <param name="take">Number of records to take. Recommended: 4</param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpClient`1">
            <summary>
            UdpClient facilitates invoking remote methods via UDP on a server instantiated with <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type defining the methods accessible on the server.</typeparam>
            <example>
            Usage:
            <code>
            var UdpClient = new UdpClient&lt;YourClassType&gt;(IPAddress.Loopback, 12002);
            var result = UdpClient.CallMethod&lt;string&gt;("YourMethodName", "param1", 123, true);
            Console.WriteLine(result);
            </code>
            </example>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpClient`1.#ctor(System.Net.IPAddress,System.Nullable{System.UInt16})">
            <summary>
            Initializes an instance of UdpClient to connect and invoke methods on a server.
            </summary>
            <param name="serverAddress">Server's IP address.</param>
            <param name="serverPort">Port number on which the server is listening.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpClient`1.ScanServers">
            <summary>
            Scan for servers and return port/title by calling special function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpClient`1.CallMethod``1(System.String,System.Object[])">
            <summary>
            Invokes a specific method on the server and retrieves the result.
            </summary>
            <typeparam name="TResult">Expected return type of the method.</typeparam>
            <param name="methodName">Name of the method to invoke.</param>
            <param name="parameters">Parameters for the method call.</param>
            <returns>Result from the method invocation.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper">
            <summary>
            UDP Helper.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.DefaultStartPort">
            <summary>
            Defaul range start server port.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.DefaultEndPort">
            <summary>
            Defaul range end server port.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.DefaultIPAddress">
            <summary>
            Defaul IP Address. Loopback IP limits communication to local machine.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.FindFreePort(System.UInt16,System.UInt16)">
            <summary>
            Find first free port. IANA Port categories:
                    0 –  1023 – System or Well Known ports.
                 1024 – 49151 – User or Registered ports.
                49152 - 65535 – Dynamic (Private) or Ephemeral Ports.
            </summary>
            <returns>Free port number if found; otherwise 0.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.GetProcessInfo">
            <summary>
            Returns the title of the current process.
            </summary>
            <returns>Title of the current process.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.Serialize(System.Object)">
            <summary>
            Serialize request.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.Deserialize``1(System.Byte[])">
            <summary>
            Deserialize response.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.EnableEncryption">
            <summary>
            Enable encrytion. Encryptuon limits communication to the same user only.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.CryptoSalt">
            <summary>
            Default salt for encryption and decryption.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.UserEncrypt(System.Byte[])">
            <summary>
            Encrypt data. The protected data is associated with the current user.
            Only threads running under the current user context can unprotect the data.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpHelper.UserDecrypt(System.Byte[])">
            <summary>
            Decrypt data. The protected data is associated with the current user.
            Only threads running under the current user context can unprotect the data.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpServer`1">
            <summary>
            UdpServer establishes a simple UDP-based RPC server for invoking methods defined in the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Class type with methods to expose via the server.</typeparam>
            <example>
            Usage:
            <code>
            var UdpServer = new UdpServer&lt;YourClassType&gt;();
            UdpServer.StartServer(IPAddress.Loopback, 12002);
            UdpServer.StopServer();
            </code>
            </example>
        </member>
        <member name="E:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpServer`1.MessageReceived">
            <summary>
            Count messages.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpServer`1.IsRunning">
            <summary>
            Server status.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpServer`1.StartServer(System.Net.IPAddress,System.Nullable{System.Int32})">
            <summary>
            Starts the server to listen for incoming UDP requests on the given address and port.
            </summary>
            <param name="address">IP Address to bind the server.</param>
            <param name="port">Port number to listen on.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpServer`1.StopServer">
            <summary>
            Stops the server from listening for incoming requests.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Server.UdpServer`1.Listen">
            <summary>
            Listens for incoming UDP requests and processes them by invoking corresponding methods.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.TtsMonitor.VoiceGender">
            <summary>
            Voice gender.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.TtsMonitor.VoiceGender.Neutral">
            <summary>Neutral</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.TtsMonitor.VoiceGender.Female">
            <summary>Female</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.TtsMonitor.VoiceGender.Male">
            <summary>Male</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message">
            <summary>TTS Message</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.name">
            <summary>Character name.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.language">
            <summary>
            Culture. Can be sent in 2 formats:
            	LCID HEX value: '419' = 0x0419 = ru-RU = Russian - Russia // Regex: ^[0-9a-fA-F]{1,4}$
            	Language[-Location] value: 'en-GB' = English - Great Britain
            var ci = new System.Globalization.CultureInfo("en-GB", false);
            var ci = new System.Globalization.CultureInfo(0x040A, false);
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.command">
            <summary></summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.pitch">
            <summary></summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.rate">
            <summary></summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.gender">
            <summary></summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.effect">
            <summary></summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.group">
            <summary></summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.volume">
            <summary>Voice volume. Range from 0 to 100. Default: 100.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.message.part">
            <summary>Text to play.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.AudioInfo">
            <summary>Audio info.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.AudioInfo.Voice">
            <summary>Voice</summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.AudioInfo.#ctor">
            <summary>Audio info.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo">
            <summary>
            Basic AI audio or image info.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo.Name">
            <summary>Image file name.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo.FullName">
            <summary>Image full file name.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo.Prompt">
            <summary>AI Prompt used to generate this image.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo.Type">
            <summary>Type of the object.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo.DataUri">
            <summary>Data inside URL.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.BasicInfo.FileSuffix">
            <summary>Suffix to add to the file.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType">
            <summary>
            Context type.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.None">
            <summary>None</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Clipboard">
            <summary>Clipboard.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Selection">
            <summary>Selection.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.ActiveDocument">
            <summary>Current active open document.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.OpenDocuments">
            <summary>Open documents.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.SelectedDocuments">
            <summary>Selected documents in Solution Explorer.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.CurrentProject">
            <summary>Current Project of currently active document.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.SelectedProject">
            <summary>Selected Project of selected document in Solution Explorer.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Solution">
            <summary>Solution.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.ChatHistory">
            <summary>Chat history.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Error">
            <summary>Error info.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.ErrorDocument">
            <summary>Document related to the error.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Exception">
            <summary>Exception info.</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.ExceptionDocuments">
            <summary>Documents related to exception</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Image">
            <summary>Image</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ContextType.Audio">
            <summary>Audio</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem">
            <summary>
            Visual Studio Document Item.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.#ctor">
            <summary>
            Visual Studio Document Item.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Visual Studio Document Item.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.Name">
            <summary>
            Name of the document.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.FullName">
            <summary>Full path to the document.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.ProjectName">
            <summary>
            Parent project name of the document.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.IsFile">
            <summary>
            If physical file then...
            https://github.com/MicrosoftDocs/visualstudio-docs/blob/main/docs/extensibility/ide-guids.md
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.IsText">
            <summary>
            True if content is text.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.IsSaved">
            <summary>
            True if content is saved.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.DocumentType">
            <summary>Document type.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.ContextType">
            <summary>Document context type.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.Language">
            <summary>Code language of the document.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.Kind">
            <summary>
            Optional Kind of the document.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.Size">
            <summary>File content size.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.LastWriteTime">
            <summary>File last write time (UTC).</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.CreationTime">
            <summary>File creation time (UTC).</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.ContentHint">
            <summary>
            Hint for AI.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.ContentData">
            <summary>
            Optional content of the document.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.ConvertFile(System.String)">
            <summary>
             Convert string representation back to DocItem.
            </summary>
            <param name="s">Content to convert</param>
            <returns></returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.ConvertFile(System.Collections.Generic.IList{JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem})">
            <summary>
            Convert to flat string representation.
            </summary>
            <param name="items">Item to convert.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.LoadData(System.Byte[])">
            <summary>
            Load content into `Data` property.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.LoadFileInfo">
            <summary>
            Load file metadata.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.GetDataBinary">
            <summary>
            Get content data as orignal binary data.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.DocItem.LoadData(System.Int64)">
            <summary>
            Load content into `Data` property.
            </summary>
            <param name="maxSize">Maximum bytes to load.</param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem">
            <summary>
            Code error information.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.ErrorLevel">
            <summary>Error level</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.Project">
            <summary>Project.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.File">
            <summary>Error file.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.Line">
            <summary>Error line.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.Column">
            <summary>Error column.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.Description">
            <summary>Error description.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.Category">
            <summary>Error categories.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem.DocumentFile">
            <summary>Document file related to the error.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorLevel">
            <summary>
            Build Error level.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorLevel.Low">
            <summary>Low</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorLevel.Medium">
            <summary>Medium</summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorLevel.High">
            <summary>High</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo">
            <summary>
            Exception info.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.#ctor">
            <summary>
            Exception info.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.#ctor(System.Exception)">
            <summary>
            Exception info.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.Type">
            <summary>Exception type.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.Message">
            <summary>Exception Message.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.StackTrace">
            <summary>Exception Stack trace.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.Data">
            <summary>Extended exception data.</summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ExceptionInfo.ToString">
            <summary>Exception to string.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ImageInfo">
            <summary>Image info.</summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ImageInfo.#ctor">
            <summary>Image info.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ImageInfo.Width">
            <summary>Image width.</summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ImageInfo.Height">
            <summary>Image height.</summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper">
            <summary>
            Provides functionalities for interacting with Documents and solutions in Visual Studio,
            handling errors, and formatting code.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetSolution(System.Boolean)">
            <summary>
            Retrieves solution document.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>Soulution document.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetSolutionProjects(System.String,System.Boolean)">
            <summary>
            Retrieves all projects or a specific project in the solution.
            </summary>
            <param name="fileFullName">Specify to get a specific project; leave empty for all projects.</param>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>A list of project documents.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetAllSolutionDocuments(System.Boolean)">
            <summary>
            Retrieves all Documents throughout the entire solution.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>A collection of all Documents within the solution.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetDocumentsOfProjectOfCurrentDocument(System.Boolean)">
            <summary>
            Retrieves all Documents within the project of the currently active Document.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>A collection of Documents from the same project as the active Document.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetDocumentsOfProjectOfSelectedDocument(System.Boolean)">
            <summary>
            Retrieves all Documents within the project of a Document selected by the user.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>A collection of Documents from the project of the selected Document.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetDocumentsSelectedInExplorer(System.Boolean)">
            <summary>
            Retrieves all Documents currently selected in the Solution Explorer.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>A collection of Documents selected in the Solution Explorer.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetOpenDocuments(System.Boolean)">
            <summary>
            Retrieves all Documents that are currently open in the editor.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>A collection of open Documents.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetCurrentDocument(System.Boolean)">
            <summary>
            Retrieves the Document currently open and active in the editor.
            </summary>
            <param name="includeContents">`true` to include full content and metadata (size, last write, creation time, project name); `false` for metadata only.</param>
            <returns>The active Document.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.OpenDocument(System.String)">
            <summary>
            Open document and make it current active document in the editor.
            </summary>
            <param name="fileFullName">Full path to the document.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.CloseDocument(System.String,System.Boolean)">
            <summary>
            Close document in the editor.
            </summary>
            <param name="fileFullName">Full path to the document.</param>
            <param name="save">`true` to save document before closing.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.UndoDocument(System.String)">
            <summary>
            Undo changes of open document in the editor.
            </summary>
            <param name="fileFullName">Full path to the document.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.SaveDocument(System.String,System.String)">
            <summary>
            Save open document in the editor.
            </summary>
            <param name="fileFullName">Full path to the document.</param>
            <param name="newFileFullName">Full path to the new copy of the document.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.ModifyCurrentDocument(System.Int64,System.Int64,System.String)">
             <summary>
             Modifies text content of the currently open and active Document in the editor. Supports line deletion, insertion, or updating through a combination of both.
             </summary>
             <param name="startLine">
             The 1-based line number indicating where the operation begins.
             For insertion, this is the line where the new content will be added before.
             </param>
             <param name="deleteLines">
             The number of lines to delete starting from the line number specified by "startLine"
             Set to 0 for insertion operations where existing lines are not to be removed.
             To delete all lines from the start line, use the maximum value of the integer type.
             </param>
             <param name="insertContents">
             The content to insert. For deletion operations, this should be set to null.
             For update operations, this contains the new content replacing the deleted lines.
             </param>
             <returns>A string indicating the outcome of the operation. Returns "OK" if successful.</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="startLine"/> is less than 1 or <paramref name="deleteLines"/> is negative.</exception>
             <example>
             Deleting lines:
             { startLine: 3, deleteLines: 2 }
             
             Inserting lines:
             { startLine: 4, deleteLines: 0, insertContents: "new content\r\nto insert from line 4" }
            
             Updating lines:
             { startLine: 4, deleteLines: 3, insertContents: "New content replacing lines 4-6" }
             </example>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.SetCurrentDocumentContents(System.String)">
            <summary>
            Sets the content of the currently open and active Document in the editor.
            </summary>
            <param name="contents">The Document to be made active.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetSelection">
            <summary>
            Retrieves the selection information and data from the current active open Document.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.SetSelection(System.String)">
            <summary>
            Sets the selection within the active Document based on the provided data.
            </summary>
            <param name="contents">The selection data to be applied to the active Document.</param>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.ModifySelection(System.Int64,System.Int64,System.String)">
             <summary>
             Modifies text content of the current selection. Supports line deletion, insertion, or updating through a combination of both.
             </summary>
             <param name="startLine">
             The 1-based line number indicating where the operation begins.
             For insertion, this is the line where the new content will be added before.
             </param>
             <param name="deleteLines">
             The number of lines to delete starting from the line number specified by "startLine"
             Set to 0 for insertion operations where existing lines are not to be removed.
             To delete all lines from the start line, use the maximum value of the integer type.
             </param>
             <param name="insertContents">
             The content to insert. For deletion operations, this should be set to null.
             For update operations, this contains the new content replacing the deleted lines.
             </param>
             <returns>A string indicating the outcome of the operation. Returns "OK" if successful.</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="startLine"/> is less than 1 or <paramref name="deleteLines"/> is negative.</exception>
             <example>
             Deleting lines:
             { startLine: 3, deleteLines: 2 }
             
             Inserting lines:
             { startLine: 4, deleteLines: 0, insertContents: "new content\r\nto insert from line 4" }
            
             Updating lines:
             { startLine: 4, deleteLines: 3, insertContents: "New content replacing lines 4-6" }
             </example>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetErrors(System.Nullable{JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorLevel},System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Retrieves a list of errors. Results can by filtered.
            </summary>
            <param name="errorLevel">The error level to filter by. If null, all error levels are considered.</param>
            <param name="project">The specific project to filter errors by. If null, errors from all projects are considered.</param>
            <param name="fileFullName">The specific file name to filter errors by. If null, errors from all files are considered.</param>
            <param name="includeDocItem">If true, includes the document item associated with each error.</param>
            <param name="includeDocItemContents">If true, additionally loads the contents of the document item associated with each error. This parameter is effective only if <paramref name="includeDocItem"/> is also true.</param>
            <returns>A list of <see cref="T:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorItem"/> objects representing the filtered errors.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetSelectedErrors(System.Boolean,System.Boolean)">
            <summary>
            Retrieves errors currently selected in the Error List Window.
            </summary>
            <param name="includeDocItem">Includes the Document associated with the errors.</param>
            <param name="includeDocItemContents">Includes Document file contents.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetCurrentException(System.Boolean,System.Boolean)">
            <summary>
            Retrieves information about the currently caught exception, if any.
            </summary>
            <param name="includeDocItem">Includes the Document associated with the Exception.</param>
            <param name="includeDocItemContents">Includes Document file contents.</param>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.EditFormatDocument">
            <summary>
            Formats the entire content of the currently active Document according to the solution's code style settings.
            </summary>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.EditFormatSelection">
            <summary>
            Formats the currently selected code fragment in the active Document according to the solution's code style settings.
            </summary>
            <returns>True if the operation was successful.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetEnvironmentContext">
            <summary>
            Get information about current Visual Studio environment.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.BuildSolutionProject(System.String)">
            <summary>
            Triggers a build for the specified project within the solution.
            </summary>
            <param name="fileFullName">The full name of the project to build.</param>
            <returns>A string indicating the build result.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetOutputContent(System.String)">
            <summary>
            Retrieves the content of a specified output window pane in Visual Studio.
            </summary>
            <param name="type">The type of the output pane (e.g., "Build" or "Debug").</param>
            <returns>The content of the specified output window pane.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ISolutionHelper.GetProperties">
            <summary>
            Get properties of the solution and the startup project. For example `SolutionDir`.
            </summary>
            <returns>Properties of the solution and the startup project.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffHelper">
            <summary>
            Diff helper.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffHelper.CompareContentsAndReturnChanges(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffHelper.CompareFilesAndReturnChanges(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffHelper.ModifyContents(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffHelper.ModifyFile(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffHelper.PatchText(System.String,JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch[])">
            <summary>
            Updates the content of the text by applying a series of changes. 
            These changes must be represented using the unified diff format, which is focused on efficient text manipulation.
            This format supports insertions, deletions, and modifications, particularly useful when bandwidth or storage is limited.
            The unified diff format is derived from the Myers Diff Algorithm, as implemented by Google's Diff Match and Patch library.
            </summary>
            <param name="contents">The text contents that needs to be updated.</param>
            <param name="textPatches">Unified diff string representing the changes to apply,
            adhering to the Eugene W.Myers AnO(ND) Difference Algorithm implemented by The Diff Match and Patch library.</param>
            <returns>'OK' if the operation was successful; otherwise, an error message.</returns>
            <example>
            The GNU Unified Diff Format example:
            
            @@ -{OriginalStart},{OriginalLength} +{TargetStart},{TargetLength} @@
            -{TextToDelete}
            +{TextToInsert}
            
            Placeholders:
            - {OriginalStart} is the 1-based starting line number of the original text segment.
            - {OriginalLength} is the number of lines in the original text segment affected by the patch.
            - {TargetStart} is the 1-based starting line number in the transformed (target) text where changes begin.
            - {TargetLength} is the number of lines in the transformed text resulting from the patch.
            - {TextToDelete} is the original text to be removed.
            - {TextToInsert} is the new text to be added.
            </example>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffOperation">
            <summary>
            Represents a single difference operation between two sets of text.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffOperation.Operation">
            <summary>
            The type of operation performed: INSERT (to add text), DELETE (to remove text), or EQUAL (indicating no change).
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.DiffOperation.TextContent">
            <summary>
            The text content associated with this operation. For INSERT, this is the text to be added;
            for DELETE, it's the text to be removed; and for EQUAL, it's the text that remains unchanged.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.IDiffHelper">
            <summary>
            Diff helper.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.IDiffHelper.CompareFilesAndReturnChanges(System.String,System.String)">
            <summary>
            Compares two files and returns a textual representation of the changes by using
            Eugene W.Myers AnO(ND) Difference Algorithm implemented by Google's The Diff Match and Patch library.
            This format is focused on efficient text manipulation, supporting insertions, deletions, and modifications,
            especially useful when bandwidth or storage is limited.
            </summary>
            <param name="originalFileFullName">The path to the original file.</param>
            <param name="modifiedFileFullName">The path to the modified file.</param>
            <returns>Unified diff string detailing the changes made from the original file to the modified file.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.IDiffHelper.CompareContentsAndReturnChanges(System.String,System.String)">
            <summary>
            Compares two contents and returns a textual representation of the changes by using
            Eugene W.Myers AnO(ND) Difference Algorithm implemented by Google's The Diff Match and Patch library.
            This format is focused on efficient text manipulation, supporting insertions, deletions, and modifications,
            especially useful when bandwidth or storage is limited.
            </summary>
            <param name="originalText">Original content.</param>
            <param name="modifiedText">Modified content.</param>
            <returns>Unified diff string detailing the changes made from the original content to the modified content.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.IDiffHelper.ModifyFile(System.String,System.String)">
            <summary>
            Updates the content of the file by applying a series of changes. 
            These changes must be represented using the unified diff format, which is focused on efficient text manipulation.
            This format supports insertions, deletions, and modifications, particularly useful when bandwidth or storage is limited.
            The unified diff format is derived from the Myers Diff Algorithm, as implemented by Google's Diff Match and Patch library.
            </summary>
            <param name="fileFullName">The path to the file that needs to be updated.</param>
            <param name="unifiedDiff">Unified diff string representing the changes to apply,
            adhering to the Eugene W.Myers AnO(ND) Difference Algorithm implemented by Google's The Diff Match and Patch library.</param>
            <returns>'OK' if the operation was successful; otherwise, an error message.</returns>
            <example>
            The GNU Unified Diff Format example:
            
            @@ -OriginalStart,OriginalLength +TargetStart,TargetLength @@
            -TextToDelete
            +TextToInsert
            
            Placeholders:
            - OriginalStart is the 1-based starting line number of the original text segment.
            - OriginalLength is the number of lines in the original text segment affected by the patch.
            - TargetStart is the 1-based starting line number in the transformed (target) text where changes begin.
            - TargetLength is the number of lines in the transformed text resulting from the patch.
            - TextToDelete is the original text to be removed.
            - TextToInsert is the new text to be added.
            </example>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.IDiffHelper.ModifyContents(System.String,System.String)">
            <summary>
            Updates the content of the file by applying a series of changes. 
            These changes must be represented using the unified diff format, which is focused on efficient text manipulation.
            This format supports insertions, deletions, and modifications, particularly useful when bandwidth or storage is limited.
            The unified diff format is derived from the Myers Diff Algorithm, as implemented by Google's Diff Match and Patch library.
            </summary>
            <param name="contents">The contents that needs to be updated.</param>
            <param name="unifiedDiff">Unified diff string representing the changes to apply,
            adhering to the Eugene W.Myers AnO(ND) Difference Algorithm implemented by The Diff Match and Patch library.</param>
            <returns>'OK' if the operation was successful; otherwise, an error message.</returns>
            <example>
            The GNU Unified Diff Format example:
            
            @@ -OriginalStart,OriginalLength +TargetStart,TargetLength @@
            -TextToDelete
            +TextToInsert
            
            Placeholders:
            - OriginalStart is the 1-based starting line number of the original text segment.
            - OriginalLength is the number of lines in the original text segment affected by the patch.
            - TargetStart is the 1-based starting line number in the transformed (target) text where changes begin.
            - TargetLength is the number of lines in the transformed text resulting from the patch.
            - TextToDelete is the original text to be removed.
            - TextToInsert is the new text to be added.
            </example>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.OperationType">
            <summary>
            Enumerates the types of operations that can be performed in a diff operation.
            These operations are key to understanding how one piece of text can be transformed into another.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.OperationType.DELETE">
            <summary>
            Delete operation: Specifies that the associated text should be removed from the original text.
            This operation subtracts text from the target document.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.OperationType.INSERT">
            <summary>
            Insert operation: Indicates that the associated text should be inserted into the original text.
            This operation adds text to the target document.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.OperationType.EQUAL">
            <summary>
            Equal operation: Denotes that the associated text remains unchanged between the original and target texts.
            This operation signals no modification to the text at this segment.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch">
            <summary>
            Represents a single patch operation, which is a cohesive set of differences (diffs) applied to
            transform one piece of text into another. This structure is central to efficiently conveying updates
            between versions of a text document.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch.Operations">
            <summary>
            An array of diff operations that collectively define the transformation required to patch the text.
            Each element in this array represents a single change operation to be applied in sequence.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch.OriginalStart">
            <summary>
            The 1-based starting position in the original text where the patching begins. The numbering starts
            from 1, following the conventional human counting system, marking the beginning of the text segment to be patched.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch.TargetStart">
            <summary>
            The 1-based starting position in the target text where the result of the patching operation begins to apply.
            This helps align the patch operations correctly with the target text.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch.OriginalLength">
            <summary>
            The total number of characters from the original text that are encompassed by the patch. This length covers
            the exact segment within the original text that is affected by the applied patch.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.UnifiedFormat.TextPatch.TargetLength">
            <summary>
            The total number of characters in the target or resultant text after the patch has been applied. This reflects
            the length of the text segment resulting from the transformation.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio">
            <summary>
            Allows AI to work with Visual Studio. For example, it can retrieve the content of a selected text, the current document, or all open documents in Visual Studio when you request it. Functions are only used when the application runs as an extension inside Visual Studio.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.Current">
            <summary>
            Current Visual Solution helper.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetSolution(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetSolutionProjects(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.EditFormatDocument">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.EditFormatSelection">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetCurrentDocument(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.OpenDocument(System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.SaveDocument(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.CloseDocument(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.UndoDocument(System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetAllSolutionDocuments(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetCurrentException(System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetDocumentsOfProjectOfCurrentDocument(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetDocumentsOfProjectOfSelectedDocument(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetDocumentsSelectedInExplorer(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetOpenDocuments(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetErrors(System.Nullable{JocysCom.VS.AiCompanion.Plugins.Core.VsFunctions.ErrorLevel},System.String,System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetSelectedErrors(System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetSelection">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.SetCurrentDocumentContents(System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.ModifyCurrentDocument(System.Int64,System.Int64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.SetSelection(System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.ModifySelection(System.Int64,System.Int64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetEnvironmentContext">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.BuildSolutionProject(System.String)">
            <inheritdoc />
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.VisualStudio.GetOutputContent(System.String)">
            <inheritdoc />
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Web">
            <summary>
            Web functions that allow AI to retrieve web content or files from the web or call APIs.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web.GetWebPageContents(System.String,System.Boolean)">
            <summary>
            Retrieve content of websites by URL.
            </summary>
            <param name="url">URL which points to the resource.</param>
            <param name="asPlainText">Read the content of a page in plain text.</param>
            <returns>The output of the request.</returns>
            <exception cref="T:System.Exception">Error message explaining why the request failed.</exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web.GetWebPageContentsAuthenticated(System.String,System.Boolean)">
            <summary>
            Retrieve content of websites by URL. Use default credentials of the user.
            </summary>
            <param name="url">URL which points to the resource.</param>
            <param name="asPlainText">Read the content of a page in plain text.</param>
            <returns>The output of the request.</returns>
            <exception cref="T:System.Exception">Error message explaining why the request failed.</exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web.DownloadContent(System.String)">
            <summary>
            Download and return the content of a given URL.
            </summary>
            <param name="url">URL from which the content will be downloaded. The URL can have different schemes like 'https://', 'file://', etc., that are capable of fetching files or data across various protocols.</param>
            <returns>The output of the request.</returns>
            <exception cref="T:System.Exception">Error message explaining why the request failed.</exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web.DownloadContentAuthenticated(System.String)">
            <summary>
            Download and return the content of a given URL. Use default credentials of the user.
            </summary>
            <param name="url">URL from which the content will be downloaded. The URL can have different schemes like 'https://', 'file://', etc., that are capable of fetching files or data across various protocols.</param>
            <returns>The output of the request.</returns>
            <exception cref="T:System.Exception">Error message explaining why the request failed.</exception>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web.CallApi(System.String,System.String,System.String)">
            <summary>
            Performs an HTTP request to the specified API and returns its JSON response.
            </summary>
            <param name="httpCallType">The type of HTTP call (e.g., GET, POST)</param>
            <param name="apiBaseUrl">The base URL of the API.</param>
            <param name="jsonString">The JSON string to send as the payload, if applicable.</param>
            <returns>The JSON response from the API.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web.CallApiAuthenticated(System.String,System.String,System.String)">
            <summary>
            Performs an HTTP request to the specified API and returns its JSON response.
            </summary>
            <param name="httpCallType">The type of HTTP call (e.g., GET, POST)</param>
            <param name="apiBaseUrl">The base URL of the API.</param>
            <param name="jsonString">The JSON string to send as the payload, if applicable.</param>
            <returns>The JSON response from the API.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Web._CallApiAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Performs an HTTP request to the specified API and returns its JSON response.
            </summary>
            <param name="httpCallType">The type of HTTP call (e.g., GET, POST)</param>
            <param name="apiBaseUrl">The base URL of the API.</param>
            <param name="jsonString">The JSON string to send as the payload, if applicable.</param>
            <param name="useDefaultCredentials">Use default credentials.</param>
            <returns>The JSON response from the API.</returns>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Workflow">
            <summary>
            Provides functionality to execute a workflow plan by invoking specified methods.
            The executor manages variables and handles method invocation using reflection.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflow.ExecutePlanCallback">
            <summary>
            Will be used by plugins manager.
            </summary>
            <summary>
            Will be used by plugins manager and called by AI.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Workflow.ExecutePlan(JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Plan,System.Threading.CancellationToken)">
            <summary>
            Executes the workflow plan by invoking methods defined in the plan.
            </summary>
            <param name="plan">The workflow plan containing variables and operations to execute.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Example">
            <summary>
            Demonstrates how to use the WorkflowExecutor to execute a workflow plan.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Example.FunctionA(System.Int32)">
            <summary>
            Sample function that takes an integer argument and returns a formatted string.
            </summary>
            <param name="arg1">An integer argument.</param>
            <returns>A formatted string containing the argument value.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Example.FunctionB(System.String)">
            <summary>
            Sample function that takes a string input and returns a boolean indicating if the string is not null or empty.
            </summary>
            <param name="input">A string input.</param>
            <returns>True if the input is not null or empty; otherwise, false.</returns>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Example.Test(System.Threading.CancellationToken)">
            <summary>
            Tests the workflow execution by creating a plan and executing it using WorkflowExecutor.
            </summary>
            <param name="cancellationToken">A cancellation token for asynchronous operations (unused in this example).</param>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Operation">
            <summary>
            Represents an operation (method call) in the workflow plan.
            Each operation specifies a method to invoke, its arguments, and where to store the output.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Operation.MethodName">
            <summary>
            Gets or sets the name of the method to invoke.
            The method must be available in the provided method collection.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Operation.Arguments">
            <summary>
            Gets or sets the list of variable names to use as arguments.
            The variables must be defined in the plan's variable list.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Operation.Output">
            <summary>
            Gets or sets the name of the variable to store the result.
            The result can then be used as an argument in subsequent operations.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Plan">
            <summary>
            Represents the workflow plan.
            The plan consists of a list of variables and a sequence of operations to execute.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Plan.Variables">
            <summary>
            Gets or sets the list of variables defined in the plan.
            Variables provide data inputs and store outputs of operations.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Plan.Workflow">
            <summary>
            Gets or sets the list of operations (method calls) to execute.
            Operations are executed in the order they appear in this list.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Variable">
            <summary>
            Represents a variable in the workflow plan.
            Variables are used to store data that can be passed between operations.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Variable.Name">
            <summary>
            Gets or sets the name of the variable.
            This is used to reference the variable within the workflow.
            </summary>
        </member>
        <member name="P:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Variable.Value">
            <summary>
            Gets or sets the value of the variable.
            Can be any object type.
            </summary>
        </member>
        <member name="T:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.WorkflowExecutor">
            <summary>
            Provides functionality to execute a workflow plan by invoking specified methods.
            The executor manages variables and handles method invocation using reflection.
            </summary>
        </member>
        <member name="F:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.WorkflowExecutor.variables">
            <summary>
            Stores the variables used in the workflow execution.
            The key is the variable name, and the value is the variable's value.
            </summary>
        </member>
        <member name="M:JocysCom.VS.AiCompanion.Plugins.Core.Workflows.WorkflowExecutor.ExecutePlan(JocysCom.VS.AiCompanion.Plugins.Core.Workflows.Plan,System.Reflection.MethodInfo[],System.Threading.CancellationToken)">
            <summary>
            Executes the workflow plan by invoking methods defined in the plan.
            </summary>
            <param name="plan">The workflow plan containing variables and operations to execute.</param>
            <param name="methods">An array of methods available for invocation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
        </member>
        <member name="T:Hompus.VideoInputDevices.SystemDeviceEnumerator">
            <summary>
            A system device enumerator.
            </summary>
        </member>
        <member name="M:Hompus.VideoInputDevices.SystemDeviceEnumerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Hompus.VideoInputDevices.SystemDeviceEnumerator"/> class.
            </summary>
        </member>
        <member name="M:Hompus.VideoInputDevices.SystemDeviceEnumerator.ListVideoInputDevice">
            <summary>
            Lists the video input devices connected to the system.
            </summary>
            <returns>A dictionary with the id and name of the device.</returns>
        </member>
        <member name="M:Hompus.VideoInputDevices.SystemDeviceEnumerator.Dispose(System.Boolean)">
            <summary>
            rees, releases, or resets unmanaged resources.
            </summary>
            <param name="disposing"><c>false</c> if invoked by the finalizer because the object is being garbage collected; otherwise, <c>true</c></param>
        </member>
        <member name="M:Hompus.VideoInputDevices.SystemDeviceEnumerator.Dispose">
            <summary>
            Frees, releases, or resets unmanaged resources.
            </summary>
        </member>
        <member name="T:Hompus.VideoInputDevices.VideoInputDevice">
            <summary>
            A video input device that is detected in the system.
            </summary>
        </member>
        <member name="P:Hompus.VideoInputDevices.VideoInputDevice.Name">
            <summary>
            The name of the video input device.
            </summary>
        </member>
        <member name="M:Hompus.VideoInputDevices.VideoInputDevice.#ctor(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>
            Initializes a new instance of the <see cref="T:Hompus.VideoInputDevices.VideoInputDevice"/> class.
            </summary>
            <param name="moniker">A moniker object.</param>
        </member>
        <member name="M:Hompus.VideoInputDevices.VideoInputDevice.GetFriendlyName(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>
            Get the name represented by the moniker.
            </summary>
        </member>
    </members>
</doc>
