<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFrameworks>net48;net8.0-windows</TargetFrameworks>
		<Nullable>disable</Nullable>
		<UseWindowsForms>true</UseWindowsForms>
		<UseWPF>true</UseWPF>
		<PackageIcon>App.ico</PackageIcon>
		<ApplicationIcon>App.ico</ApplicationIcon>
		<DebugType>embedded</DebugType>
		<!-- Include all necessary native libraries (such as sni.dll for SQL Network Interface)
			 inside the main output file (.dll or .exe). These libraries are then extracted to a
			 temporary directory and loaded from there when the application starts, making
			 the application self-contained and not dependent on any libraries being installed
			 on the target machine.
		 -->
		<IncludeNativeLibrariesForSelfExtract>True</IncludeNativeLibrariesForSelfExtract>
		<SignAssembly>False</SignAssembly>
		<PackageId>VS AI Companion</PackageId>
		<Product>VS AI Companion</Product>
		<Platforms>AnyCPU</Platforms>
		<Copyright>Jocys.com</Copyright>
		<Company>Jocys.com</Company>
		<Authors>Jocys.com Team</Authors>
		<AssemblyVersion>1.16.6</AssemblyVersion>
		<FileVersion>1.16.6</FileVersion>
		<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
		<!-- Include only English language resources; exclude all other language folders from the bin directory -->
		<SatelliteResourceLanguages>en</SatelliteResourceLanguages>
		<NeutralLanguage>en</NeutralLanguage>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<PlatformTarget>x64</PlatformTarget>
	</PropertyGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net48'">
		<Reference Include="System.configuration" />
	</ItemGroup>

	<ItemGroup>
		<None Remove="Resources\BuildDate.*" />
	</ItemGroup>

	<ItemGroup>
		<Content Include="App.ico" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="Resources\BuildDate.*" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Engine\JocysCom.VS.AiCompanion.Engine.csproj" />
	</ItemGroup>

	<ItemGroup>
		<None Update="App.ico">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<!-- Define a new target that should run before OuterPreBuild -->
	<Target Name="PreOuterPreBuild" BeforeTargets="OuterPreBuild">
		<Message Text="Running PreOuterPreBuild target" Importance="high"/>
	</Target>

	<Target Name="OuterPreBuild" BeforeTargets="DispatchToInnerBuilds">
		<Message Text="Running OuterPreBuild target" Importance="high"/>
		<!-- Execute once for multiple builds -->
		<Exec Command="PowerShell.exe -NoProfile -ExecutionPolicy Bypass -File &quot;$(SolutionDir)Resources\CreateBuildDateFile.ps1&quot; &quot;$(ProjectDir)Resources\BuildDate.txt&quot;" />
	</Target>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
	</Target>
	<Target Name="RemoveFolders" AfterTargets="Build">
		<!-- List of unwanted files or directories -->
		<Message Text="Removing unwanted runtime folders..." Importance="high" />
		<RemoveDir Directories="$(TargetDir)arm" />
		<RemoveDir Directories="$(TargetDir)arm64" />
		<RemoveDir Directories="$(TargetDir)musl-arm64" />
		<RemoveDir Directories="$(TargetDir)musl-x64" />
		<RemoveDir Directories="$(TargetDir)musl-x86" />
		<RemoveDir Directories="$(TargetDir)x86" />
	</Target>

</Project>